// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ralt-service.proto

#include "ralt-service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_ralt_2dservice_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ralt_2dservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BasicConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ralt_2dservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Domain;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ralt_2dservice_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Misc;
}  // namespace protobuf_ralt_2dservice_2eproto
namespace raltservice {
class GetRaltStatsReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetRaltStatsReq>
      _instance;
} _GetRaltStatsReq_default_instance_;
class GetRaltStatsRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetRaltStatsRsp>
      _instance;
} _GetRaltStatsRsp_default_instance_;
class GetStatsFieldReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetStatsFieldReq>
      _instance;
} _GetStatsFieldReq_default_instance_;
class GetStatsFieldRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetStatsFieldRsp>
      _instance;
} _GetStatsFieldRsp_default_instance_;
class HomePageReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HomePageReq>
      _instance;
} _HomePageReq_default_instance_;
class HomePageRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HomePageRsp>
      _instance;
} _HomePageRsp_default_instance_;
class CacheLookUpReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CacheLookUpReq>
      _instance;
} _CacheLookUpReq_default_instance_;
class CacheResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CacheResult>
      _instance;
} _CacheResult_default_instance_;
class FlowStatLookUpReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FlowStatLookUpReq>
      _instance;
} _FlowStatLookUpReq_default_instance_;
class FlowResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FlowResult>
      _instance;
} _FlowResult_default_instance_;
class LogInfoLookUpReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogInfoLookUpReq>
      _instance;
} _LogInfoLookUpReq_default_instance_;
class LogResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogResult>
      _instance;
} _LogResult_default_instance_;
class GetRaltLogsReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetRaltLogsReq>
      _instance;
} _GetRaltLogsReq_default_instance_;
class RaltLogsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RaltLogs>
      _instance;
} _RaltLogs_default_instance_;
class GetBasicConfigReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetBasicConfigReq>
      _instance;
} _GetBasicConfigReq_default_instance_;
class BasicConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BasicConfig>
      _instance;
} _BasicConfig_default_instance_;
class GetBasicConfigRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetBasicConfigRsp>
      _instance;
} _GetBasicConfigRsp_default_instance_;
class SetBasicConfigReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetBasicConfigReq>
      _instance;
} _SetBasicConfigReq_default_instance_;
class SetBasicConfigRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetBasicConfigRsp>
      _instance;
} _SetBasicConfigRsp_default_instance_;
class DomainDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Domain>
      _instance;
} _Domain_default_instance_;
class GetAllDomainReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetAllDomainReq>
      _instance;
} _GetAllDomainReq_default_instance_;
class GetAllDomainRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetAllDomainRsp>
      _instance;
} _GetAllDomainRsp_default_instance_;
class UpdateDomainReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateDomainReq>
      _instance;
} _UpdateDomainReq_default_instance_;
class UpdateDomainRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateDomainRsp>
      _instance;
} _UpdateDomainRsp_default_instance_;
class GetDomainReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetDomainReq>
      _instance;
} _GetDomainReq_default_instance_;
class GetDomainRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetDomainRsp>
      _instance;
} _GetDomainRsp_default_instance_;
class AddDomainReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddDomainReq>
      _instance;
} _AddDomainReq_default_instance_;
class AddDomainRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddDomainRsp>
      _instance;
} _AddDomainRsp_default_instance_;
class DeleteDomainReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteDomainReq>
      _instance;
} _DeleteDomainReq_default_instance_;
class DeleteDomainRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteDomainRsp>
      _instance;
} _DeleteDomainRsp_default_instance_;
class GetMiscReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetMiscReq>
      _instance;
} _GetMiscReq_default_instance_;
class GetMiscRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetMiscRsp>
      _instance;
} _GetMiscRsp_default_instance_;
class MiscDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Misc>
      _instance;
} _Misc_default_instance_;
class ModMiscOpReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ModMiscOpReq>
      _instance;
} _ModMiscOpReq_default_instance_;
class ModMiscOpRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ModMiscOpRsp>
      _instance;
} _ModMiscOpRsp_default_instance_;
class RaltStatusReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RaltStatusReq>
      _instance;
} _RaltStatusReq_default_instance_;
class RaltStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RaltStatus>
      _instance;
} _RaltStatus_default_instance_;
class ExecCmdReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExecCmdReq>
      _instance;
} _ExecCmdReq_default_instance_;
class ExecCmdRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExecCmdRsp>
      _instance;
} _ExecCmdRsp_default_instance_;
}  // namespace raltservice
namespace protobuf_ralt_2dservice_2eproto {
static void InitDefaultsGetRaltStatsReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::raltservice::_GetRaltStatsReq_default_instance_;
    new (ptr) ::raltservice::GetRaltStatsReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::raltservice::GetRaltStatsReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetRaltStatsReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetRaltStatsReq}, {}};

static void InitDefaultsGetRaltStatsRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::raltservice::_GetRaltStatsRsp_default_instance_;
    new (ptr) ::raltservice::GetRaltStatsRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::raltservice::GetRaltStatsRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetRaltStatsRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetRaltStatsRsp}, {}};

static void InitDefaultsGetStatsFieldReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::raltservice::_GetStatsFieldReq_default_instance_;
    new (ptr) ::raltservice::GetStatsFieldReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::raltservice::GetStatsFieldReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetStatsFieldReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetStatsFieldReq}, {}};

static void InitDefaultsGetStatsFieldRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::raltservice::_GetStatsFieldRsp_default_instance_;
    new (ptr) ::raltservice::GetStatsFieldRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::raltservice::GetStatsFieldRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetStatsFieldRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetStatsFieldRsp}, {}};

static void InitDefaultsHomePageReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::raltservice::_HomePageReq_default_instance_;
    new (ptr) ::raltservice::HomePageReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::raltservice::HomePageReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HomePageReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHomePageReq}, {}};

static void InitDefaultsHomePageRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::raltservice::_HomePageRsp_default_instance_;
    new (ptr) ::raltservice::HomePageRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::raltservice::HomePageRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HomePageRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHomePageRsp}, {}};

static void InitDefaultsCacheLookUpReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::raltservice::_CacheLookUpReq_default_instance_;
    new (ptr) ::raltservice::CacheLookUpReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::raltservice::CacheLookUpReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CacheLookUpReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCacheLookUpReq}, {}};

static void InitDefaultsCacheResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::raltservice::_CacheResult_default_instance_;
    new (ptr) ::raltservice::CacheResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::raltservice::CacheResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CacheResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCacheResult}, {}};

static void InitDefaultsFlowStatLookUpReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::raltservice::_FlowStatLookUpReq_default_instance_;
    new (ptr) ::raltservice::FlowStatLookUpReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::raltservice::FlowStatLookUpReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FlowStatLookUpReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFlowStatLookUpReq}, {}};

static void InitDefaultsFlowResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::raltservice::_FlowResult_default_instance_;
    new (ptr) ::raltservice::FlowResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::raltservice::FlowResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FlowResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFlowResult}, {}};

static void InitDefaultsLogInfoLookUpReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::raltservice::_LogInfoLookUpReq_default_instance_;
    new (ptr) ::raltservice::LogInfoLookUpReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::raltservice::LogInfoLookUpReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LogInfoLookUpReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLogInfoLookUpReq}, {}};

static void InitDefaultsLogResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::raltservice::_LogResult_default_instance_;
    new (ptr) ::raltservice::LogResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::raltservice::LogResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LogResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLogResult}, {}};

static void InitDefaultsGetRaltLogsReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::raltservice::_GetRaltLogsReq_default_instance_;
    new (ptr) ::raltservice::GetRaltLogsReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::raltservice::GetRaltLogsReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetRaltLogsReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetRaltLogsReq}, {}};

static void InitDefaultsRaltLogs() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::raltservice::_RaltLogs_default_instance_;
    new (ptr) ::raltservice::RaltLogs();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::raltservice::RaltLogs::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RaltLogs =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRaltLogs}, {}};

static void InitDefaultsGetBasicConfigReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::raltservice::_GetBasicConfigReq_default_instance_;
    new (ptr) ::raltservice::GetBasicConfigReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::raltservice::GetBasicConfigReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetBasicConfigReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetBasicConfigReq}, {}};

static void InitDefaultsBasicConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::raltservice::_BasicConfig_default_instance_;
    new (ptr) ::raltservice::BasicConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::raltservice::BasicConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BasicConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBasicConfig}, {}};

static void InitDefaultsGetBasicConfigRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::raltservice::_GetBasicConfigRsp_default_instance_;
    new (ptr) ::raltservice::GetBasicConfigRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::raltservice::GetBasicConfigRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetBasicConfigRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetBasicConfigRsp}, {
      &protobuf_ralt_2dservice_2eproto::scc_info_BasicConfig.base,}};

static void InitDefaultsSetBasicConfigReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::raltservice::_SetBasicConfigReq_default_instance_;
    new (ptr) ::raltservice::SetBasicConfigReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::raltservice::SetBasicConfigReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SetBasicConfigReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSetBasicConfigReq}, {
      &protobuf_ralt_2dservice_2eproto::scc_info_BasicConfig.base,}};

static void InitDefaultsSetBasicConfigRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::raltservice::_SetBasicConfigRsp_default_instance_;
    new (ptr) ::raltservice::SetBasicConfigRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::raltservice::SetBasicConfigRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetBasicConfigRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetBasicConfigRsp}, {}};

static void InitDefaultsDomain() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::raltservice::_Domain_default_instance_;
    new (ptr) ::raltservice::Domain();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::raltservice::Domain::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Domain =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDomain}, {}};

static void InitDefaultsGetAllDomainReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::raltservice::_GetAllDomainReq_default_instance_;
    new (ptr) ::raltservice::GetAllDomainReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::raltservice::GetAllDomainReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetAllDomainReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetAllDomainReq}, {}};

static void InitDefaultsGetAllDomainRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::raltservice::_GetAllDomainRsp_default_instance_;
    new (ptr) ::raltservice::GetAllDomainRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::raltservice::GetAllDomainRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetAllDomainRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetAllDomainRsp}, {
      &protobuf_ralt_2dservice_2eproto::scc_info_Domain.base,}};

static void InitDefaultsUpdateDomainReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::raltservice::_UpdateDomainReq_default_instance_;
    new (ptr) ::raltservice::UpdateDomainReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::raltservice::UpdateDomainReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UpdateDomainReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUpdateDomainReq}, {
      &protobuf_ralt_2dservice_2eproto::scc_info_Domain.base,}};

static void InitDefaultsUpdateDomainRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::raltservice::_UpdateDomainRsp_default_instance_;
    new (ptr) ::raltservice::UpdateDomainRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::raltservice::UpdateDomainRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UpdateDomainRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUpdateDomainRsp}, {}};

static void InitDefaultsGetDomainReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::raltservice::_GetDomainReq_default_instance_;
    new (ptr) ::raltservice::GetDomainReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::raltservice::GetDomainReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetDomainReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetDomainReq}, {}};

static void InitDefaultsGetDomainRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::raltservice::_GetDomainRsp_default_instance_;
    new (ptr) ::raltservice::GetDomainRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::raltservice::GetDomainRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetDomainRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetDomainRsp}, {
      &protobuf_ralt_2dservice_2eproto::scc_info_Domain.base,}};

static void InitDefaultsAddDomainReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::raltservice::_AddDomainReq_default_instance_;
    new (ptr) ::raltservice::AddDomainReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::raltservice::AddDomainReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AddDomainReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAddDomainReq}, {
      &protobuf_ralt_2dservice_2eproto::scc_info_Domain.base,}};

static void InitDefaultsAddDomainRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::raltservice::_AddDomainRsp_default_instance_;
    new (ptr) ::raltservice::AddDomainRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::raltservice::AddDomainRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AddDomainRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAddDomainRsp}, {}};

static void InitDefaultsDeleteDomainReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::raltservice::_DeleteDomainReq_default_instance_;
    new (ptr) ::raltservice::DeleteDomainReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::raltservice::DeleteDomainReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteDomainReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteDomainReq}, {}};

static void InitDefaultsDeleteDomainRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::raltservice::_DeleteDomainRsp_default_instance_;
    new (ptr) ::raltservice::DeleteDomainRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::raltservice::DeleteDomainRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteDomainRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteDomainRsp}, {}};

static void InitDefaultsGetMiscReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::raltservice::_GetMiscReq_default_instance_;
    new (ptr) ::raltservice::GetMiscReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::raltservice::GetMiscReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetMiscReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetMiscReq}, {}};

static void InitDefaultsGetMiscRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::raltservice::_GetMiscRsp_default_instance_;
    new (ptr) ::raltservice::GetMiscRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::raltservice::GetMiscRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetMiscRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetMiscRsp}, {}};

static void InitDefaultsMisc() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::raltservice::_Misc_default_instance_;
    new (ptr) ::raltservice::Misc();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::raltservice::Misc::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Misc =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMisc}, {}};

static void InitDefaultsModMiscOpReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::raltservice::_ModMiscOpReq_default_instance_;
    new (ptr) ::raltservice::ModMiscOpReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::raltservice::ModMiscOpReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ModMiscOpReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsModMiscOpReq}, {
      &protobuf_ralt_2dservice_2eproto::scc_info_Misc.base,}};

static void InitDefaultsModMiscOpRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::raltservice::_ModMiscOpRsp_default_instance_;
    new (ptr) ::raltservice::ModMiscOpRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::raltservice::ModMiscOpRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ModMiscOpRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsModMiscOpRsp}, {}};

static void InitDefaultsRaltStatusReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::raltservice::_RaltStatusReq_default_instance_;
    new (ptr) ::raltservice::RaltStatusReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::raltservice::RaltStatusReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RaltStatusReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRaltStatusReq}, {}};

static void InitDefaultsRaltStatus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::raltservice::_RaltStatus_default_instance_;
    new (ptr) ::raltservice::RaltStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::raltservice::RaltStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RaltStatus =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRaltStatus}, {}};

static void InitDefaultsExecCmdReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::raltservice::_ExecCmdReq_default_instance_;
    new (ptr) ::raltservice::ExecCmdReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::raltservice::ExecCmdReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ExecCmdReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExecCmdReq}, {}};

static void InitDefaultsExecCmdRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::raltservice::_ExecCmdRsp_default_instance_;
    new (ptr) ::raltservice::ExecCmdRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::raltservice::ExecCmdRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ExecCmdRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExecCmdRsp}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_GetRaltStatsReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetRaltStatsRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetStatsFieldReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetStatsFieldRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HomePageReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HomePageRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CacheLookUpReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CacheResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FlowStatLookUpReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FlowResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LogInfoLookUpReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LogResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetRaltLogsReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RaltLogs.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetBasicConfigReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BasicConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetBasicConfigRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetBasicConfigReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetBasicConfigRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Domain.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetAllDomainReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetAllDomainRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateDomainReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateDomainRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetDomainReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetDomainRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AddDomainReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AddDomainRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteDomainReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteDomainRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetMiscReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetMiscRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Misc.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ModMiscOpReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ModMiscOpRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RaltStatusReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RaltStatus.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExecCmdReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExecCmdRsp.base);
}

::google::protobuf::Metadata file_level_metadata[39];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::GetRaltStatsReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::GetRaltStatsReq, ip_addr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::GetRaltStatsRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::GetRaltStatsRsp, start_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::GetRaltStatsRsp, end_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::GetRaltStatsRsp, logs_space_used_mb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::GetRaltStatsRsp, logs_space_total_mb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::GetRaltStatsRsp, flow_incoming_requests_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::GetRaltStatsRsp, flow_incoming_responses_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::GetRaltStatsRsp, flow_total_client_connections_ipv4_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::GetRaltStatsRsp, flow_total_client_connections_ipv6_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::GetRaltStatsRsp, flow_total_server_connections_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::GetRaltStatsRsp, cache_used_mb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::GetRaltStatsRsp, cache_total_mb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::GetRaltStatsRsp, cache_total_hits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::GetRaltStatsRsp, cache_hit_ratio_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::GetRaltStatsRsp, hostdb_total_hits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::GetRaltStatsRsp, hostdb_hit_ratio_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::GetStatsFieldReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::GetStatsFieldReq, ip_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::GetStatsFieldReq, field_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::GetStatsFieldRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::GetStatsFieldRsp, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::HomePageReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::HomePageReq, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::HomePageRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::HomePageRsp, domain_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::HomePageRsp, cluster_device_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::HomePageRsp, app_transfor_bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::HomePageRsp, app_transfor_connections_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::HomePageRsp, cache_total_hits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::HomePageRsp, cache_bytes_total_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::HomePageRsp, cache_bytes_used_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::HomePageRsp, cache_num_docs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::CacheLookUpReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::CacheLookUpReq, ip_addr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::CacheResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::CacheResult, cache_total_hits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::CacheResult, bytes_total_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::CacheResult, bytes_used_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::CacheResult, num_docs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::CacheResult, cache_hit_ratio_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::FlowStatLookUpReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::FlowStatLookUpReq, ip_addr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::FlowResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::FlowResult, user_agent_current_connections_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::FlowResult, origin_server_current_connections_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::FlowResult, completed_requests_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::FlowResult, total_incoming_connections_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::FlowResult, incoming_requests_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::FlowResult, outgoing_requests_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::FlowResult, incoming_responses_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::FlowResult, total_client_connections_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::FlowResult, total_client_connections_ipv4_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::FlowResult, total_client_connections_ipv6_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::FlowResult, total_server_connections_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::FlowResult, user_agent_total_bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::FlowResult, origin_server_total_bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::FlowResult, bandwidth_hit_ratio_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::LogInfoLookUpReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::LogInfoLookUpReq, ip_addr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::LogResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::LogResult, log_files_space_mb_used_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::LogResult, max_space_mb_for_logs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::GetRaltLogsReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::GetRaltLogsReq, ip_addr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::RaltLogs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::RaltLogs, logs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::GetBasicConfigReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::GetBasicConfigReq, ip_addr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::BasicConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::BasicConfig, logging_enabled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::BasicConfig, max_space_mb_for_logs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::BasicConfig, rolling_enabled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::BasicConfig, server_ports_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::BasicConfig, storage_cache_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::BasicConfig, http_cache_enabled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::BasicConfig, connections_throttle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::BasicConfig, ip_resolve_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::GetBasicConfigRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::GetBasicConfigRsp, basic_config_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::SetBasicConfigReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::SetBasicConfigReq, ip_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::SetBasicConfigReq, basic_config_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::SetBasicConfigRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::SetBasicConfigRsp, result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::Domain, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::Domain, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::Domain, domain_str_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::Domain, append_or_replace_str_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::Domain, port_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::GetAllDomainReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::GetAllDomainReq, ip_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::GetAllDomainReq, page_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::GetAllDomainReq, page_number_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::GetAllDomainRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::GetAllDomainRsp, domain_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::GetAllDomainRsp, domain_total_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::UpdateDomainReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::UpdateDomainReq, ip_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::UpdateDomainReq, domain_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::UpdateDomainRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::UpdateDomainRsp, result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::GetDomainReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::GetDomainReq, ip_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::GetDomainReq, domain_str_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::GetDomainReq, transformed_domain_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::GetDomainReq, page_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::GetDomainReq, page_number_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::GetDomainRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::GetDomainRsp, domain_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::GetDomainRsp, domain_total_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::AddDomainReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::AddDomainReq, ip_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::AddDomainReq, domain_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::AddDomainRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::AddDomainRsp, result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::DeleteDomainReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::DeleteDomainReq, ip_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::DeleteDomainReq, domain_str_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::DeleteDomainRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::DeleteDomainRsp, result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::GetMiscReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::GetMiscReq, ip_addr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::GetMiscRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::GetMiscRsp, ralt_filter_type_default_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::Misc, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::Misc, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::Misc, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::ModMiscOpReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::ModMiscOpReq, ip_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::ModMiscOpReq, misc_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::ModMiscOpRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::ModMiscOpRsp, result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::RaltStatusReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::RaltStatusReq, ip_addr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::RaltStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::RaltStatus, ip_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::RaltStatus, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::ExecCmdReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::ExecCmdReq, ip_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::ExecCmdReq, cmd_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::ExecCmdRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::raltservice::ExecCmdRsp, result_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::raltservice::GetRaltStatsReq)},
  { 6, -1, sizeof(::raltservice::GetRaltStatsRsp)},
  { 26, -1, sizeof(::raltservice::GetStatsFieldReq)},
  { 33, -1, sizeof(::raltservice::GetStatsFieldRsp)},
  { 39, -1, sizeof(::raltservice::HomePageReq)},
  { 45, -1, sizeof(::raltservice::HomePageRsp)},
  { 58, -1, sizeof(::raltservice::CacheLookUpReq)},
  { 64, -1, sizeof(::raltservice::CacheResult)},
  { 74, -1, sizeof(::raltservice::FlowStatLookUpReq)},
  { 80, -1, sizeof(::raltservice::FlowResult)},
  { 99, -1, sizeof(::raltservice::LogInfoLookUpReq)},
  { 105, -1, sizeof(::raltservice::LogResult)},
  { 112, -1, sizeof(::raltservice::GetRaltLogsReq)},
  { 118, -1, sizeof(::raltservice::RaltLogs)},
  { 124, -1, sizeof(::raltservice::GetBasicConfigReq)},
  { 130, -1, sizeof(::raltservice::BasicConfig)},
  { 143, -1, sizeof(::raltservice::GetBasicConfigRsp)},
  { 149, -1, sizeof(::raltservice::SetBasicConfigReq)},
  { 156, -1, sizeof(::raltservice::SetBasicConfigRsp)},
  { 162, -1, sizeof(::raltservice::Domain)},
  { 171, -1, sizeof(::raltservice::GetAllDomainReq)},
  { 179, -1, sizeof(::raltservice::GetAllDomainRsp)},
  { 186, -1, sizeof(::raltservice::UpdateDomainReq)},
  { 193, -1, sizeof(::raltservice::UpdateDomainRsp)},
  { 199, -1, sizeof(::raltservice::GetDomainReq)},
  { 209, -1, sizeof(::raltservice::GetDomainRsp)},
  { 216, -1, sizeof(::raltservice::AddDomainReq)},
  { 223, -1, sizeof(::raltservice::AddDomainRsp)},
  { 229, -1, sizeof(::raltservice::DeleteDomainReq)},
  { 236, -1, sizeof(::raltservice::DeleteDomainRsp)},
  { 242, -1, sizeof(::raltservice::GetMiscReq)},
  { 248, -1, sizeof(::raltservice::GetMiscRsp)},
  { 254, -1, sizeof(::raltservice::Misc)},
  { 261, -1, sizeof(::raltservice::ModMiscOpReq)},
  { 268, -1, sizeof(::raltservice::ModMiscOpRsp)},
  { 274, -1, sizeof(::raltservice::RaltStatusReq)},
  { 280, -1, sizeof(::raltservice::RaltStatus)},
  { 287, -1, sizeof(::raltservice::ExecCmdReq)},
  { 294, -1, sizeof(::raltservice::ExecCmdRsp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::raltservice::_GetRaltStatsReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::raltservice::_GetRaltStatsRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::raltservice::_GetStatsFieldReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::raltservice::_GetStatsFieldRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::raltservice::_HomePageReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::raltservice::_HomePageRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::raltservice::_CacheLookUpReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::raltservice::_CacheResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::raltservice::_FlowStatLookUpReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::raltservice::_FlowResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::raltservice::_LogInfoLookUpReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::raltservice::_LogResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::raltservice::_GetRaltLogsReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::raltservice::_RaltLogs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::raltservice::_GetBasicConfigReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::raltservice::_BasicConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::raltservice::_GetBasicConfigRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::raltservice::_SetBasicConfigReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::raltservice::_SetBasicConfigRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::raltservice::_Domain_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::raltservice::_GetAllDomainReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::raltservice::_GetAllDomainRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::raltservice::_UpdateDomainReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::raltservice::_UpdateDomainRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::raltservice::_GetDomainReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::raltservice::_GetDomainRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::raltservice::_AddDomainReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::raltservice::_AddDomainRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::raltservice::_DeleteDomainReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::raltservice::_DeleteDomainRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::raltservice::_GetMiscReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::raltservice::_GetMiscRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::raltservice::_Misc_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::raltservice::_ModMiscOpReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::raltservice::_ModMiscOpRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::raltservice::_RaltStatusReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::raltservice::_RaltStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::raltservice::_ExecCmdReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::raltservice::_ExecCmdRsp_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "ralt-service.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 39);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022ralt-service.proto\022\013raltservice\"\"\n\017Get"
      "RaltStatsReq\022\017\n\007ip_addr\030\001 \001(\t\"\307\003\n\017GetRal"
      "tStatsRsp\022\022\n\nstart_time\030\001 \001(\r\022\020\n\010end_tim"
      "e\030\002 \001(\r\022\032\n\022logs_space_used_mb\030\003 \001(\r\022\033\n\023l"
      "ogs_space_total_mb\030\004 \001(\r\022\036\n\026flow_incomin"
      "g_requests\030\005 \001(\r\022\037\n\027flow_incoming_respon"
      "ses\030\006 \001(\r\022*\n\"flow_total_client_connectio"
      "ns_ipv4\030\007 \001(\r\022*\n\"flow_total_client_conne"
      "ctions_ipv6\030\010 \001(\r\022%\n\035flow_total_server_c"
      "onnections\030\t \001(\r\022\025\n\rcache_used_mb\030\n \001(\004\022"
      "\026\n\016cache_total_mb\030\013 \001(\004\022\030\n\020cache_total_h"
      "its\030\014 \001(\r\022\027\n\017cache_hit_ratio\030\r \001(\002\022\031\n\021ho"
      "stdb_total_hits\030\016 \001(\r\022\030\n\020hostdb_hit_rati"
      "o\030\017 \001(\002\"7\n\020GetStatsFieldReq\022\017\n\007ip_addr\030\001"
      " \001(\t\022\022\n\nfield_name\030\002 \001(\t\"!\n\020GetStatsFiel"
      "dRsp\022\r\n\005value\030\001 \001(\t\"\033\n\013HomePageReq\022\014\n\004ty"
      "pe\030\001 \001(\r\"\336\001\n\013HomePageRsp\022\022\n\ndomain_num\030\001"
      " \001(\r\022\026\n\016cluster_device\030\002 \001(\r\022\032\n\022app_tran"
      "sfor_bytes\030\003 \001(\004\022 \n\030app_transfor_connect"
      "ions\030\004 \001(\r\022\030\n\020cache_total_hits\030\005 \001(\r\022\031\n\021"
      "cache_bytes_total\030\006 \001(\004\022\030\n\020cache_bytes_u"
      "sed\030\007 \001(\004\022\026\n\016cache_num_docs\030\010 \001(\r\"!\n\016Cac"
      "heLookUpReq\022\017\n\007ip_addr\030\001 \001(\t\"{\n\013CacheRes"
      "ult\022\030\n\020cache_total_hits\030\001 \001(\r\022\023\n\013bytes_t"
      "otal\030\002 \001(\004\022\022\n\nbytes_used\030\003 \001(\004\022\020\n\010num_do"
      "cs\030\004 \001(\r\022\027\n\017cache_hit_ratio\030\005 \001(\002\"$\n\021Flo"
      "wStatLookUpReq\022\017\n\007ip_addr\030\001 \001(\t\"\357\003\n\nFlow"
      "Result\022,\n$user_agent_current_connections"
      "_count\030\001 \001(\r\022/\n\'origin_server_current_co"
      "nnections_count\030\002 \001(\r\022\032\n\022completed_reque"
      "sts\030\003 \001(\r\022\"\n\032total_incoming_connections\030"
      "\004 \001(\r\022\031\n\021incoming_requests\030\005 \001(\r\022\031\n\021outg"
      "oing_requests\030\006 \001(\r\022\032\n\022incoming_response"
      "s\030\007 \001(\r\022 \n\030total_client_connections\030\010 \001("
      "\r\022%\n\035total_client_connections_ipv4\030\t \001(\r"
      "\022%\n\035total_client_connections_ipv6\030\n \001(\r\022"
      " \n\030total_server_connections\030\013 \001(\r\022\036\n\026use"
      "r_agent_total_bytes\030\014 \001(\004\022!\n\031origin_serv"
      "er_total_bytes\030\r \001(\004\022\033\n\023bandwidth_hit_ra"
      "tio\030\016 \001(\002\"#\n\020LogInfoLookUpReq\022\017\n\007ip_addr"
      "\030\001 \001(\t\"K\n\tLogResult\022\037\n\027log_files_space_m"
      "b_used\030\001 \001(\r\022\035\n\025max_space_mb_for_logs\030\002 "
      "\001(\r\"!\n\016GetRaltLogsReq\022\017\n\007ip_addr\030\001 \001(\t\"\030"
      "\n\010RaltLogs\022\014\n\004logs\030\001 \001(\014\"$\n\021GetBasicConf"
      "igReq\022\017\n\007ip_addr\030\001 \001(\t\"\336\001\n\013BasicConfig\022\027"
      "\n\017logging_enabled\030\001 \001(\r\022\035\n\025max_space_mb_"
      "for_logs\030\002 \001(\r\022\027\n\017rolling_enabled\030\003 \001(\r\022"
      "\024\n\014server_ports\030\004 \001(\t\022\032\n\022storage_cache_s"
      "ize\030\005 \001(\r\022\032\n\022http_cache_enabled\030\006 \001(\r\022\034\n"
      "\024connections_throttle\030\007 \001(\r\022\022\n\nip_resolv"
      "e\030\010 \001(\t\"C\n\021GetBasicConfigRsp\022.\n\014basic_co"
      "nfig\030\001 \001(\0132\030.raltservice.BasicConfig\"T\n\021"
      "SetBasicConfigReq\022\017\n\007ip_addr\030\001 \001(\t\022.\n\014ba"
      "sic_config\030\002 \001(\0132\030.raltservice.BasicConf"
      "ig\"#\n\021SetBasicConfigRsp\022\016\n\006result\030\001 \001(\r\""
      "p\n\006Domain\022%\n\004type\030\001 \001(\0162\027.raltservice.Do"
      "mainType\022\022\n\ndomain_str\030\002 \001(\t\022\035\n\025append_o"
      "r_replace_str\030\003 \001(\t\022\014\n\004port\030\004 \001(\t\"J\n\017Get"
      "AllDomainReq\022\017\n\007ip_addr\030\001 \001(\t\022\021\n\tpage_si"
      "ze\030\002 \001(\r\022\023\n\013page_number\030\003 \001(\r\"L\n\017GetAllD"
      "omainRsp\022#\n\006domain\030\001 \003(\0132\023.raltservice.D"
      "omain\022\024\n\014domain_total\030\002 \001(\r\"G\n\017UpdateDom"
      "ainReq\022\017\n\007ip_addr\030\001 \001(\t\022#\n\006domain\030\002 \003(\0132"
      "\023.raltservice.Domain\"!\n\017UpdateDomainRsp\022"
      "\016\n\006result\030\001 \001(\r\"w\n\014GetDomainReq\022\017\n\007ip_ad"
      "dr\030\001 \001(\t\022\022\n\ndomain_str\030\002 \001(\t\022\032\n\022transfor"
      "med_domain\030\003 \001(\t\022\021\n\tpage_size\030\004 \001(\r\022\023\n\013p"
      "age_number\030\005 \001(\r\"I\n\014GetDomainRsp\022#\n\006doma"
      "in\030\001 \003(\0132\023.raltservice.Domain\022\024\n\014domain_"
      "total\030\002 \001(\r\"D\n\014AddDomainReq\022\017\n\007ip_addr\030\001"
      " \001(\t\022#\n\006domain\030\002 \001(\0132\023.raltservice.Domai"
      "n\"\036\n\014AddDomainRsp\022\016\n\006result\030\001 \001(\r\"6\n\017Del"
      "eteDomainReq\022\017\n\007ip_addr\030\001 \001(\t\022\022\n\ndomain_"
      "str\030\002 \001(\t\"!\n\017DeleteDomainRsp\022\016\n\006result\030\001"
      " \001(\r\"\035\n\nGetMiscReq\022\017\n\007ip_addr\030\001 \001(\t\"G\n\nG"
      "etMiscRsp\0229\n\030ralt_filter_type_default\030\001 "
      "\001(\0162\027.raltservice.MiscSwitch\"Q\n\004Misc\022!\n\003"
      "key\030\001 \001(\0162\024.raltservice.MiscKey\022&\n\005value"
      "\030\002 \001(\0162\027.raltservice.MiscSwitch\"@\n\014ModMi"
      "scOpReq\022\017\n\007ip_addr\030\001 \001(\t\022\037\n\004misc\030\002 \001(\0132\021"
      ".raltservice.Misc\"\036\n\014ModMiscOpRsp\022\016\n\006res"
      "ult\030\001 \001(\r\" \n\rRaltStatusReq\022\017\n\007ip_addr\030\001 "
      "\001(\t\"-\n\nRaltStatus\022\017\n\007ip_addr\030\001 \001(\t\022\016\n\006st"
      "atus\030\002 \001(\r\"D\n\nExecCmdReq\022\017\n\007ip_addr\030\001 \001("
      "\t\022%\n\003cmd\030\002 \001(\0162\030.raltservice.CommandType"
      "\"\034\n\nExecCmdRsp\022\016\n\006result\030\001 \001(\r*:\n\nDomain"
      "Type\022\026\n\022enum_member_domain\020\000\022\024\n\020enum_sub"
      "s_domain\020\001*,\n\007MiscKey\022!\n\035enum_ralt_filte"
      "r_type_default\020\000*+\n\nMiscSwitch\022\016\n\nswitch"
      "_off\020\000\022\r\n\tswitch_on\020\001*b\n\013CommandType\022\016\n\n"
      "ralt_start\020\000\022\r\n\tralt_stop\020\001\022\020\n\014ralt_rest"
      "art\020\002\022\017\n\013cache_clear\020\003\022\021\n\rreload_config\020"
      "\0042\310\n\n\013RaltService\022L\n\014getRaltStats\022\034.ralt"
      "service.GetRaltStatsReq\032\034.raltservice.Ge"
      "tRaltStatsRsp\"\000\022O\n\rgetStatsField\022\035.ralts"
      "ervice.GetStatsFieldReq\032\035.raltservice.Ge"
      "tStatsFieldRsp\"\000\022G\n\017getHomePageData\022\030.ra"
      "ltservice.HomePageReq\032\030.raltservice.Home"
      "PageRsp\"\000\022H\n\rshowCacheData\022\033.raltservice"
      ".CacheLookUpReq\032\030.raltservice.CacheResul"
      "t\"\000\022M\n\020showFlowStatData\022\036.raltservice.Fl"
      "owStatLookUpReq\032\027.raltservice.FlowResult"
      "\"\000\022J\n\017showLogInfoData\022\035.raltservice.LogI"
      "nfoLookUpReq\032\026.raltservice.LogResult\"\000\022E"
      "\n\013getRaltLogs\022\033.raltservice.GetRaltLogsR"
      "eq\032\025.raltservice.RaltLogs\"\0000\001\022R\n\016getBasi"
      "cConfig\022\036.raltservice.GetBasicConfigReq\032"
      "\036.raltservice.GetBasicConfigRsp\"\000\022R\n\016set"
      "BasicConfig\022\036.raltservice.SetBasicConfig"
      "Req\032\036.raltservice.SetBasicConfigRsp\"\000\022L\n"
      "\014getAllDomain\022\034.raltservice.GetAllDomain"
      "Req\032\034.raltservice.GetAllDomainRsp\"\000\022L\n\014u"
      "pdateDomain\022\034.raltservice.UpdateDomainRe"
      "q\032\034.raltservice.UpdateDomainRsp\"\000\022C\n\tget"
      "Domain\022\031.raltservice.GetDomainReq\032\031.ralt"
      "service.GetDomainRsp\"\000\022C\n\taddDomain\022\031.ra"
      "ltservice.AddDomainReq\032\031.raltservice.Add"
      "DomainRsp\"\000\022L\n\014deleteDomain\022\034.raltservic"
      "e.DeleteDomainReq\032\034.raltservice.DeleteDo"
      "mainRsp\"\000\022=\n\007getMisc\022\027.raltservice.GetMi"
      "scReq\032\027.raltservice.GetMiscRsp\"\000\022A\n\007modM"
      "isc\022\031.raltservice.ModMiscOpReq\032\031.raltser"
      "vice.ModMiscOpRsp\"\000\022H\n\rgetRaltStatus\022\032.r"
      "altservice.RaltStatusReq\032\027.raltservice.R"
      "altStatus\"\0000\001\022=\n\007execCmd\022\027.raltservice.E"
      "xecCmdReq\032\027.raltservice.ExecCmdRsp\"\000b\006pr"
      "oto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 5044);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ralt-service.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ralt_2dservice_2eproto
namespace raltservice {
const ::google::protobuf::EnumDescriptor* DomainType_descriptor() {
  protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ralt_2dservice_2eproto::file_level_enum_descriptors[0];
}
bool DomainType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MiscKey_descriptor() {
  protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ralt_2dservice_2eproto::file_level_enum_descriptors[1];
}
bool MiscKey_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MiscSwitch_descriptor() {
  protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ralt_2dservice_2eproto::file_level_enum_descriptors[2];
}
bool MiscSwitch_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CommandType_descriptor() {
  protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ralt_2dservice_2eproto::file_level_enum_descriptors[3];
}
bool CommandType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void GetRaltStatsReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRaltStatsReq::kIpAddrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRaltStatsReq::GetRaltStatsReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ralt_2dservice_2eproto::scc_info_GetRaltStatsReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:raltservice.GetRaltStatsReq)
}
GetRaltStatsReq::GetRaltStatsReq(const GetRaltStatsReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip_addr().size() > 0) {
    ip_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_addr_);
  }
  // @@protoc_insertion_point(copy_constructor:raltservice.GetRaltStatsReq)
}

void GetRaltStatsReq::SharedCtor() {
  ip_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetRaltStatsReq::~GetRaltStatsReq() {
  // @@protoc_insertion_point(destructor:raltservice.GetRaltStatsReq)
  SharedDtor();
}

void GetRaltStatsReq::SharedDtor() {
  ip_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetRaltStatsReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetRaltStatsReq::descriptor() {
  ::protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetRaltStatsReq& GetRaltStatsReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ralt_2dservice_2eproto::scc_info_GetRaltStatsReq.base);
  return *internal_default_instance();
}


void GetRaltStatsReq::Clear() {
// @@protoc_insertion_point(message_clear_start:raltservice.GetRaltStatsReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetRaltStatsReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raltservice.GetRaltStatsReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ip_addr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "raltservice.GetRaltStatsReq.ip_addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:raltservice.GetRaltStatsReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raltservice.GetRaltStatsReq)
  return false;
#undef DO_
}

void GetRaltStatsReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raltservice.GetRaltStatsReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.GetRaltStatsReq.ip_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ip_addr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:raltservice.GetRaltStatsReq)
}

::google::protobuf::uint8* GetRaltStatsReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:raltservice.GetRaltStatsReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.GetRaltStatsReq.ip_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ip_addr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raltservice.GetRaltStatsReq)
  return target;
}

size_t GetRaltStatsReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raltservice.GetRaltStatsReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip_addr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetRaltStatsReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raltservice.GetRaltStatsReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRaltStatsReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetRaltStatsReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raltservice.GetRaltStatsReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raltservice.GetRaltStatsReq)
    MergeFrom(*source);
  }
}

void GetRaltStatsReq::MergeFrom(const GetRaltStatsReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raltservice.GetRaltStatsReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip_addr().size() > 0) {

    ip_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_addr_);
  }
}

void GetRaltStatsReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raltservice.GetRaltStatsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRaltStatsReq::CopyFrom(const GetRaltStatsReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raltservice.GetRaltStatsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRaltStatsReq::IsInitialized() const {
  return true;
}

void GetRaltStatsReq::Swap(GetRaltStatsReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRaltStatsReq::InternalSwap(GetRaltStatsReq* other) {
  using std::swap;
  ip_addr_.Swap(&other->ip_addr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetRaltStatsReq::GetMetadata() const {
  protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetRaltStatsRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRaltStatsRsp::kStartTimeFieldNumber;
const int GetRaltStatsRsp::kEndTimeFieldNumber;
const int GetRaltStatsRsp::kLogsSpaceUsedMbFieldNumber;
const int GetRaltStatsRsp::kLogsSpaceTotalMbFieldNumber;
const int GetRaltStatsRsp::kFlowIncomingRequestsFieldNumber;
const int GetRaltStatsRsp::kFlowIncomingResponsesFieldNumber;
const int GetRaltStatsRsp::kFlowTotalClientConnectionsIpv4FieldNumber;
const int GetRaltStatsRsp::kFlowTotalClientConnectionsIpv6FieldNumber;
const int GetRaltStatsRsp::kFlowTotalServerConnectionsFieldNumber;
const int GetRaltStatsRsp::kCacheUsedMbFieldNumber;
const int GetRaltStatsRsp::kCacheTotalMbFieldNumber;
const int GetRaltStatsRsp::kCacheTotalHitsFieldNumber;
const int GetRaltStatsRsp::kCacheHitRatioFieldNumber;
const int GetRaltStatsRsp::kHostdbTotalHitsFieldNumber;
const int GetRaltStatsRsp::kHostdbHitRatioFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRaltStatsRsp::GetRaltStatsRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ralt_2dservice_2eproto::scc_info_GetRaltStatsRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:raltservice.GetRaltStatsRsp)
}
GetRaltStatsRsp::GetRaltStatsRsp(const GetRaltStatsRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&start_time_, &from.start_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&hostdb_hit_ratio_) -
    reinterpret_cast<char*>(&start_time_)) + sizeof(hostdb_hit_ratio_));
  // @@protoc_insertion_point(copy_constructor:raltservice.GetRaltStatsRsp)
}

void GetRaltStatsRsp::SharedCtor() {
  ::memset(&start_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hostdb_hit_ratio_) -
      reinterpret_cast<char*>(&start_time_)) + sizeof(hostdb_hit_ratio_));
}

GetRaltStatsRsp::~GetRaltStatsRsp() {
  // @@protoc_insertion_point(destructor:raltservice.GetRaltStatsRsp)
  SharedDtor();
}

void GetRaltStatsRsp::SharedDtor() {
}

void GetRaltStatsRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetRaltStatsRsp::descriptor() {
  ::protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetRaltStatsRsp& GetRaltStatsRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ralt_2dservice_2eproto::scc_info_GetRaltStatsRsp.base);
  return *internal_default_instance();
}


void GetRaltStatsRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:raltservice.GetRaltStatsRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&start_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hostdb_hit_ratio_) -
      reinterpret_cast<char*>(&start_time_)) + sizeof(hostdb_hit_ratio_));
  _internal_metadata_.Clear();
}

bool GetRaltStatsRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raltservice.GetRaltStatsRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 start_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &start_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 end_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &end_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 logs_space_used_mb = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &logs_space_used_mb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 logs_space_total_mb = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &logs_space_total_mb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 flow_incoming_requests = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flow_incoming_requests_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 flow_incoming_responses = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flow_incoming_responses_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 flow_total_client_connections_ipv4 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flow_total_client_connections_ipv4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 flow_total_client_connections_ipv6 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flow_total_client_connections_ipv6_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 flow_total_server_connections = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flow_total_server_connections_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 cache_used_mb = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &cache_used_mb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 cache_total_mb = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &cache_total_mb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 cache_total_hits = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cache_total_hits_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float cache_hit_ratio = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(109u /* 109 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &cache_hit_ratio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 hostdb_total_hits = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hostdb_total_hits_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float hostdb_hit_ratio = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(125u /* 125 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &hostdb_hit_ratio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:raltservice.GetRaltStatsRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raltservice.GetRaltStatsRsp)
  return false;
#undef DO_
}

void GetRaltStatsRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raltservice.GetRaltStatsRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 start_time = 1;
  if (this->start_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->start_time(), output);
  }

  // uint32 end_time = 2;
  if (this->end_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->end_time(), output);
  }

  // uint32 logs_space_used_mb = 3;
  if (this->logs_space_used_mb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->logs_space_used_mb(), output);
  }

  // uint32 logs_space_total_mb = 4;
  if (this->logs_space_total_mb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->logs_space_total_mb(), output);
  }

  // uint32 flow_incoming_requests = 5;
  if (this->flow_incoming_requests() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->flow_incoming_requests(), output);
  }

  // uint32 flow_incoming_responses = 6;
  if (this->flow_incoming_responses() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->flow_incoming_responses(), output);
  }

  // uint32 flow_total_client_connections_ipv4 = 7;
  if (this->flow_total_client_connections_ipv4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->flow_total_client_connections_ipv4(), output);
  }

  // uint32 flow_total_client_connections_ipv6 = 8;
  if (this->flow_total_client_connections_ipv6() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->flow_total_client_connections_ipv6(), output);
  }

  // uint32 flow_total_server_connections = 9;
  if (this->flow_total_server_connections() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->flow_total_server_connections(), output);
  }

  // uint64 cache_used_mb = 10;
  if (this->cache_used_mb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->cache_used_mb(), output);
  }

  // uint64 cache_total_mb = 11;
  if (this->cache_total_mb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(11, this->cache_total_mb(), output);
  }

  // uint32 cache_total_hits = 12;
  if (this->cache_total_hits() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->cache_total_hits(), output);
  }

  // float cache_hit_ratio = 13;
  if (this->cache_hit_ratio() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(13, this->cache_hit_ratio(), output);
  }

  // uint32 hostdb_total_hits = 14;
  if (this->hostdb_total_hits() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->hostdb_total_hits(), output);
  }

  // float hostdb_hit_ratio = 15;
  if (this->hostdb_hit_ratio() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(15, this->hostdb_hit_ratio(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:raltservice.GetRaltStatsRsp)
}

::google::protobuf::uint8* GetRaltStatsRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:raltservice.GetRaltStatsRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 start_time = 1;
  if (this->start_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->start_time(), target);
  }

  // uint32 end_time = 2;
  if (this->end_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->end_time(), target);
  }

  // uint32 logs_space_used_mb = 3;
  if (this->logs_space_used_mb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->logs_space_used_mb(), target);
  }

  // uint32 logs_space_total_mb = 4;
  if (this->logs_space_total_mb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->logs_space_total_mb(), target);
  }

  // uint32 flow_incoming_requests = 5;
  if (this->flow_incoming_requests() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->flow_incoming_requests(), target);
  }

  // uint32 flow_incoming_responses = 6;
  if (this->flow_incoming_responses() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->flow_incoming_responses(), target);
  }

  // uint32 flow_total_client_connections_ipv4 = 7;
  if (this->flow_total_client_connections_ipv4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->flow_total_client_connections_ipv4(), target);
  }

  // uint32 flow_total_client_connections_ipv6 = 8;
  if (this->flow_total_client_connections_ipv6() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->flow_total_client_connections_ipv6(), target);
  }

  // uint32 flow_total_server_connections = 9;
  if (this->flow_total_server_connections() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->flow_total_server_connections(), target);
  }

  // uint64 cache_used_mb = 10;
  if (this->cache_used_mb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->cache_used_mb(), target);
  }

  // uint64 cache_total_mb = 11;
  if (this->cache_total_mb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(11, this->cache_total_mb(), target);
  }

  // uint32 cache_total_hits = 12;
  if (this->cache_total_hits() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->cache_total_hits(), target);
  }

  // float cache_hit_ratio = 13;
  if (this->cache_hit_ratio() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(13, this->cache_hit_ratio(), target);
  }

  // uint32 hostdb_total_hits = 14;
  if (this->hostdb_total_hits() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->hostdb_total_hits(), target);
  }

  // float hostdb_hit_ratio = 15;
  if (this->hostdb_hit_ratio() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(15, this->hostdb_hit_ratio(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raltservice.GetRaltStatsRsp)
  return target;
}

size_t GetRaltStatsRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raltservice.GetRaltStatsRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 start_time = 1;
  if (this->start_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->start_time());
  }

  // uint32 end_time = 2;
  if (this->end_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->end_time());
  }

  // uint32 logs_space_used_mb = 3;
  if (this->logs_space_used_mb() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->logs_space_used_mb());
  }

  // uint32 logs_space_total_mb = 4;
  if (this->logs_space_total_mb() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->logs_space_total_mb());
  }

  // uint32 flow_incoming_requests = 5;
  if (this->flow_incoming_requests() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flow_incoming_requests());
  }

  // uint32 flow_incoming_responses = 6;
  if (this->flow_incoming_responses() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flow_incoming_responses());
  }

  // uint32 flow_total_client_connections_ipv4 = 7;
  if (this->flow_total_client_connections_ipv4() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flow_total_client_connections_ipv4());
  }

  // uint32 flow_total_client_connections_ipv6 = 8;
  if (this->flow_total_client_connections_ipv6() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flow_total_client_connections_ipv6());
  }

  // uint64 cache_used_mb = 10;
  if (this->cache_used_mb() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->cache_used_mb());
  }

  // uint32 flow_total_server_connections = 9;
  if (this->flow_total_server_connections() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flow_total_server_connections());
  }

  // uint32 cache_total_hits = 12;
  if (this->cache_total_hits() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cache_total_hits());
  }

  // uint64 cache_total_mb = 11;
  if (this->cache_total_mb() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->cache_total_mb());
  }

  // float cache_hit_ratio = 13;
  if (this->cache_hit_ratio() != 0) {
    total_size += 1 + 4;
  }

  // uint32 hostdb_total_hits = 14;
  if (this->hostdb_total_hits() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hostdb_total_hits());
  }

  // float hostdb_hit_ratio = 15;
  if (this->hostdb_hit_ratio() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetRaltStatsRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raltservice.GetRaltStatsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRaltStatsRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetRaltStatsRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raltservice.GetRaltStatsRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raltservice.GetRaltStatsRsp)
    MergeFrom(*source);
  }
}

void GetRaltStatsRsp::MergeFrom(const GetRaltStatsRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raltservice.GetRaltStatsRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.start_time() != 0) {
    set_start_time(from.start_time());
  }
  if (from.end_time() != 0) {
    set_end_time(from.end_time());
  }
  if (from.logs_space_used_mb() != 0) {
    set_logs_space_used_mb(from.logs_space_used_mb());
  }
  if (from.logs_space_total_mb() != 0) {
    set_logs_space_total_mb(from.logs_space_total_mb());
  }
  if (from.flow_incoming_requests() != 0) {
    set_flow_incoming_requests(from.flow_incoming_requests());
  }
  if (from.flow_incoming_responses() != 0) {
    set_flow_incoming_responses(from.flow_incoming_responses());
  }
  if (from.flow_total_client_connections_ipv4() != 0) {
    set_flow_total_client_connections_ipv4(from.flow_total_client_connections_ipv4());
  }
  if (from.flow_total_client_connections_ipv6() != 0) {
    set_flow_total_client_connections_ipv6(from.flow_total_client_connections_ipv6());
  }
  if (from.cache_used_mb() != 0) {
    set_cache_used_mb(from.cache_used_mb());
  }
  if (from.flow_total_server_connections() != 0) {
    set_flow_total_server_connections(from.flow_total_server_connections());
  }
  if (from.cache_total_hits() != 0) {
    set_cache_total_hits(from.cache_total_hits());
  }
  if (from.cache_total_mb() != 0) {
    set_cache_total_mb(from.cache_total_mb());
  }
  if (from.cache_hit_ratio() != 0) {
    set_cache_hit_ratio(from.cache_hit_ratio());
  }
  if (from.hostdb_total_hits() != 0) {
    set_hostdb_total_hits(from.hostdb_total_hits());
  }
  if (from.hostdb_hit_ratio() != 0) {
    set_hostdb_hit_ratio(from.hostdb_hit_ratio());
  }
}

void GetRaltStatsRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raltservice.GetRaltStatsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRaltStatsRsp::CopyFrom(const GetRaltStatsRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raltservice.GetRaltStatsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRaltStatsRsp::IsInitialized() const {
  return true;
}

void GetRaltStatsRsp::Swap(GetRaltStatsRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRaltStatsRsp::InternalSwap(GetRaltStatsRsp* other) {
  using std::swap;
  swap(start_time_, other->start_time_);
  swap(end_time_, other->end_time_);
  swap(logs_space_used_mb_, other->logs_space_used_mb_);
  swap(logs_space_total_mb_, other->logs_space_total_mb_);
  swap(flow_incoming_requests_, other->flow_incoming_requests_);
  swap(flow_incoming_responses_, other->flow_incoming_responses_);
  swap(flow_total_client_connections_ipv4_, other->flow_total_client_connections_ipv4_);
  swap(flow_total_client_connections_ipv6_, other->flow_total_client_connections_ipv6_);
  swap(cache_used_mb_, other->cache_used_mb_);
  swap(flow_total_server_connections_, other->flow_total_server_connections_);
  swap(cache_total_hits_, other->cache_total_hits_);
  swap(cache_total_mb_, other->cache_total_mb_);
  swap(cache_hit_ratio_, other->cache_hit_ratio_);
  swap(hostdb_total_hits_, other->hostdb_total_hits_);
  swap(hostdb_hit_ratio_, other->hostdb_hit_ratio_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetRaltStatsRsp::GetMetadata() const {
  protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetStatsFieldReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetStatsFieldReq::kIpAddrFieldNumber;
const int GetStatsFieldReq::kFieldNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetStatsFieldReq::GetStatsFieldReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ralt_2dservice_2eproto::scc_info_GetStatsFieldReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:raltservice.GetStatsFieldReq)
}
GetStatsFieldReq::GetStatsFieldReq(const GetStatsFieldReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip_addr().size() > 0) {
    ip_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_addr_);
  }
  field_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.field_name().size() > 0) {
    field_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field_name_);
  }
  // @@protoc_insertion_point(copy_constructor:raltservice.GetStatsFieldReq)
}

void GetStatsFieldReq::SharedCtor() {
  ip_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetStatsFieldReq::~GetStatsFieldReq() {
  // @@protoc_insertion_point(destructor:raltservice.GetStatsFieldReq)
  SharedDtor();
}

void GetStatsFieldReq::SharedDtor() {
  ip_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetStatsFieldReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetStatsFieldReq::descriptor() {
  ::protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetStatsFieldReq& GetStatsFieldReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ralt_2dservice_2eproto::scc_info_GetStatsFieldReq.base);
  return *internal_default_instance();
}


void GetStatsFieldReq::Clear() {
// @@protoc_insertion_point(message_clear_start:raltservice.GetStatsFieldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetStatsFieldReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raltservice.GetStatsFieldReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ip_addr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "raltservice.GetStatsFieldReq.ip_addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string field_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->field_name().data(), static_cast<int>(this->field_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "raltservice.GetStatsFieldReq.field_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:raltservice.GetStatsFieldReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raltservice.GetStatsFieldReq)
  return false;
#undef DO_
}

void GetStatsFieldReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raltservice.GetStatsFieldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.GetStatsFieldReq.ip_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ip_addr(), output);
  }

  // string field_name = 2;
  if (this->field_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->field_name().data(), static_cast<int>(this->field_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.GetStatsFieldReq.field_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->field_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:raltservice.GetStatsFieldReq)
}

::google::protobuf::uint8* GetStatsFieldReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:raltservice.GetStatsFieldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.GetStatsFieldReq.ip_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ip_addr(), target);
  }

  // string field_name = 2;
  if (this->field_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->field_name().data(), static_cast<int>(this->field_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.GetStatsFieldReq.field_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->field_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raltservice.GetStatsFieldReq)
  return target;
}

size_t GetStatsFieldReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raltservice.GetStatsFieldReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip_addr());
  }

  // string field_name = 2;
  if (this->field_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->field_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetStatsFieldReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raltservice.GetStatsFieldReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetStatsFieldReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetStatsFieldReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raltservice.GetStatsFieldReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raltservice.GetStatsFieldReq)
    MergeFrom(*source);
  }
}

void GetStatsFieldReq::MergeFrom(const GetStatsFieldReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raltservice.GetStatsFieldReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip_addr().size() > 0) {

    ip_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_addr_);
  }
  if (from.field_name().size() > 0) {

    field_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field_name_);
  }
}

void GetStatsFieldReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raltservice.GetStatsFieldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetStatsFieldReq::CopyFrom(const GetStatsFieldReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raltservice.GetStatsFieldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStatsFieldReq::IsInitialized() const {
  return true;
}

void GetStatsFieldReq::Swap(GetStatsFieldReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetStatsFieldReq::InternalSwap(GetStatsFieldReq* other) {
  using std::swap;
  ip_addr_.Swap(&other->ip_addr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  field_name_.Swap(&other->field_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetStatsFieldReq::GetMetadata() const {
  protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetStatsFieldRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetStatsFieldRsp::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetStatsFieldRsp::GetStatsFieldRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ralt_2dservice_2eproto::scc_info_GetStatsFieldRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:raltservice.GetStatsFieldRsp)
}
GetStatsFieldRsp::GetStatsFieldRsp(const GetStatsFieldRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:raltservice.GetStatsFieldRsp)
}

void GetStatsFieldRsp::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetStatsFieldRsp::~GetStatsFieldRsp() {
  // @@protoc_insertion_point(destructor:raltservice.GetStatsFieldRsp)
  SharedDtor();
}

void GetStatsFieldRsp::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetStatsFieldRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetStatsFieldRsp::descriptor() {
  ::protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetStatsFieldRsp& GetStatsFieldRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ralt_2dservice_2eproto::scc_info_GetStatsFieldRsp.base);
  return *internal_default_instance();
}


void GetStatsFieldRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:raltservice.GetStatsFieldRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetStatsFieldRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raltservice.GetStatsFieldRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "raltservice.GetStatsFieldRsp.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:raltservice.GetStatsFieldRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raltservice.GetStatsFieldRsp)
  return false;
#undef DO_
}

void GetStatsFieldRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raltservice.GetStatsFieldRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.GetStatsFieldRsp.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:raltservice.GetStatsFieldRsp)
}

::google::protobuf::uint8* GetStatsFieldRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:raltservice.GetStatsFieldRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.GetStatsFieldRsp.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raltservice.GetStatsFieldRsp)
  return target;
}

size_t GetStatsFieldRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raltservice.GetStatsFieldRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetStatsFieldRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raltservice.GetStatsFieldRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetStatsFieldRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetStatsFieldRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raltservice.GetStatsFieldRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raltservice.GetStatsFieldRsp)
    MergeFrom(*source);
  }
}

void GetStatsFieldRsp::MergeFrom(const GetStatsFieldRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raltservice.GetStatsFieldRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void GetStatsFieldRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raltservice.GetStatsFieldRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetStatsFieldRsp::CopyFrom(const GetStatsFieldRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raltservice.GetStatsFieldRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStatsFieldRsp::IsInitialized() const {
  return true;
}

void GetStatsFieldRsp::Swap(GetStatsFieldRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetStatsFieldRsp::InternalSwap(GetStatsFieldRsp* other) {
  using std::swap;
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetStatsFieldRsp::GetMetadata() const {
  protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HomePageReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomePageReq::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomePageReq::HomePageReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ralt_2dservice_2eproto::scc_info_HomePageReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:raltservice.HomePageReq)
}
HomePageReq::HomePageReq(const HomePageReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:raltservice.HomePageReq)
}

void HomePageReq::SharedCtor() {
  type_ = 0u;
}

HomePageReq::~HomePageReq() {
  // @@protoc_insertion_point(destructor:raltservice.HomePageReq)
  SharedDtor();
}

void HomePageReq::SharedDtor() {
}

void HomePageReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HomePageReq::descriptor() {
  ::protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomePageReq& HomePageReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ralt_2dservice_2eproto::scc_info_HomePageReq.base);
  return *internal_default_instance();
}


void HomePageReq::Clear() {
// @@protoc_insertion_point(message_clear_start:raltservice.HomePageReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_ = 0u;
  _internal_metadata_.Clear();
}

bool HomePageReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raltservice.HomePageReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:raltservice.HomePageReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raltservice.HomePageReq)
  return false;
#undef DO_
}

void HomePageReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raltservice.HomePageReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:raltservice.HomePageReq)
}

::google::protobuf::uint8* HomePageReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:raltservice.HomePageReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raltservice.HomePageReq)
  return target;
}

size_t HomePageReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raltservice.HomePageReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HomePageReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raltservice.HomePageReq)
  GOOGLE_DCHECK_NE(&from, this);
  const HomePageReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomePageReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raltservice.HomePageReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raltservice.HomePageReq)
    MergeFrom(*source);
  }
}

void HomePageReq::MergeFrom(const HomePageReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raltservice.HomePageReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type() != 0) {
    set_type(from.type());
  }
}

void HomePageReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raltservice.HomePageReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomePageReq::CopyFrom(const HomePageReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raltservice.HomePageReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomePageReq::IsInitialized() const {
  return true;
}

void HomePageReq::Swap(HomePageReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomePageReq::InternalSwap(HomePageReq* other) {
  using std::swap;
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HomePageReq::GetMetadata() const {
  protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HomePageRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomePageRsp::kDomainNumFieldNumber;
const int HomePageRsp::kClusterDeviceFieldNumber;
const int HomePageRsp::kAppTransforBytesFieldNumber;
const int HomePageRsp::kAppTransforConnectionsFieldNumber;
const int HomePageRsp::kCacheTotalHitsFieldNumber;
const int HomePageRsp::kCacheBytesTotalFieldNumber;
const int HomePageRsp::kCacheBytesUsedFieldNumber;
const int HomePageRsp::kCacheNumDocsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomePageRsp::HomePageRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ralt_2dservice_2eproto::scc_info_HomePageRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:raltservice.HomePageRsp)
}
HomePageRsp::HomePageRsp(const HomePageRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&domain_num_, &from.domain_num_,
    static_cast<size_t>(reinterpret_cast<char*>(&cache_num_docs_) -
    reinterpret_cast<char*>(&domain_num_)) + sizeof(cache_num_docs_));
  // @@protoc_insertion_point(copy_constructor:raltservice.HomePageRsp)
}

void HomePageRsp::SharedCtor() {
  ::memset(&domain_num_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cache_num_docs_) -
      reinterpret_cast<char*>(&domain_num_)) + sizeof(cache_num_docs_));
}

HomePageRsp::~HomePageRsp() {
  // @@protoc_insertion_point(destructor:raltservice.HomePageRsp)
  SharedDtor();
}

void HomePageRsp::SharedDtor() {
}

void HomePageRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HomePageRsp::descriptor() {
  ::protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HomePageRsp& HomePageRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ralt_2dservice_2eproto::scc_info_HomePageRsp.base);
  return *internal_default_instance();
}


void HomePageRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:raltservice.HomePageRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&domain_num_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cache_num_docs_) -
      reinterpret_cast<char*>(&domain_num_)) + sizeof(cache_num_docs_));
  _internal_metadata_.Clear();
}

bool HomePageRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raltservice.HomePageRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 domain_num = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &domain_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 cluster_device = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cluster_device_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 app_transfor_bytes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &app_transfor_bytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 app_transfor_connections = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_transfor_connections_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 cache_total_hits = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cache_total_hits_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 cache_bytes_total = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &cache_bytes_total_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 cache_bytes_used = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &cache_bytes_used_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 cache_num_docs = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cache_num_docs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:raltservice.HomePageRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raltservice.HomePageRsp)
  return false;
#undef DO_
}

void HomePageRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raltservice.HomePageRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 domain_num = 1;
  if (this->domain_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->domain_num(), output);
  }

  // uint32 cluster_device = 2;
  if (this->cluster_device() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->cluster_device(), output);
  }

  // uint64 app_transfor_bytes = 3;
  if (this->app_transfor_bytes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->app_transfor_bytes(), output);
  }

  // uint32 app_transfor_connections = 4;
  if (this->app_transfor_connections() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->app_transfor_connections(), output);
  }

  // uint32 cache_total_hits = 5;
  if (this->cache_total_hits() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->cache_total_hits(), output);
  }

  // uint64 cache_bytes_total = 6;
  if (this->cache_bytes_total() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->cache_bytes_total(), output);
  }

  // uint64 cache_bytes_used = 7;
  if (this->cache_bytes_used() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->cache_bytes_used(), output);
  }

  // uint32 cache_num_docs = 8;
  if (this->cache_num_docs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->cache_num_docs(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:raltservice.HomePageRsp)
}

::google::protobuf::uint8* HomePageRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:raltservice.HomePageRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 domain_num = 1;
  if (this->domain_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->domain_num(), target);
  }

  // uint32 cluster_device = 2;
  if (this->cluster_device() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->cluster_device(), target);
  }

  // uint64 app_transfor_bytes = 3;
  if (this->app_transfor_bytes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->app_transfor_bytes(), target);
  }

  // uint32 app_transfor_connections = 4;
  if (this->app_transfor_connections() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->app_transfor_connections(), target);
  }

  // uint32 cache_total_hits = 5;
  if (this->cache_total_hits() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->cache_total_hits(), target);
  }

  // uint64 cache_bytes_total = 6;
  if (this->cache_bytes_total() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->cache_bytes_total(), target);
  }

  // uint64 cache_bytes_used = 7;
  if (this->cache_bytes_used() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->cache_bytes_used(), target);
  }

  // uint32 cache_num_docs = 8;
  if (this->cache_num_docs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->cache_num_docs(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raltservice.HomePageRsp)
  return target;
}

size_t HomePageRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raltservice.HomePageRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 domain_num = 1;
  if (this->domain_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->domain_num());
  }

  // uint32 cluster_device = 2;
  if (this->cluster_device() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cluster_device());
  }

  // uint64 app_transfor_bytes = 3;
  if (this->app_transfor_bytes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->app_transfor_bytes());
  }

  // uint32 app_transfor_connections = 4;
  if (this->app_transfor_connections() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->app_transfor_connections());
  }

  // uint32 cache_total_hits = 5;
  if (this->cache_total_hits() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cache_total_hits());
  }

  // uint64 cache_bytes_total = 6;
  if (this->cache_bytes_total() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->cache_bytes_total());
  }

  // uint64 cache_bytes_used = 7;
  if (this->cache_bytes_used() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->cache_bytes_used());
  }

  // uint32 cache_num_docs = 8;
  if (this->cache_num_docs() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cache_num_docs());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HomePageRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raltservice.HomePageRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const HomePageRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomePageRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raltservice.HomePageRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raltservice.HomePageRsp)
    MergeFrom(*source);
  }
}

void HomePageRsp::MergeFrom(const HomePageRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raltservice.HomePageRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.domain_num() != 0) {
    set_domain_num(from.domain_num());
  }
  if (from.cluster_device() != 0) {
    set_cluster_device(from.cluster_device());
  }
  if (from.app_transfor_bytes() != 0) {
    set_app_transfor_bytes(from.app_transfor_bytes());
  }
  if (from.app_transfor_connections() != 0) {
    set_app_transfor_connections(from.app_transfor_connections());
  }
  if (from.cache_total_hits() != 0) {
    set_cache_total_hits(from.cache_total_hits());
  }
  if (from.cache_bytes_total() != 0) {
    set_cache_bytes_total(from.cache_bytes_total());
  }
  if (from.cache_bytes_used() != 0) {
    set_cache_bytes_used(from.cache_bytes_used());
  }
  if (from.cache_num_docs() != 0) {
    set_cache_num_docs(from.cache_num_docs());
  }
}

void HomePageRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raltservice.HomePageRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomePageRsp::CopyFrom(const HomePageRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raltservice.HomePageRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HomePageRsp::IsInitialized() const {
  return true;
}

void HomePageRsp::Swap(HomePageRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomePageRsp::InternalSwap(HomePageRsp* other) {
  using std::swap;
  swap(domain_num_, other->domain_num_);
  swap(cluster_device_, other->cluster_device_);
  swap(app_transfor_bytes_, other->app_transfor_bytes_);
  swap(app_transfor_connections_, other->app_transfor_connections_);
  swap(cache_total_hits_, other->cache_total_hits_);
  swap(cache_bytes_total_, other->cache_bytes_total_);
  swap(cache_bytes_used_, other->cache_bytes_used_);
  swap(cache_num_docs_, other->cache_num_docs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HomePageRsp::GetMetadata() const {
  protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CacheLookUpReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CacheLookUpReq::kIpAddrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CacheLookUpReq::CacheLookUpReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ralt_2dservice_2eproto::scc_info_CacheLookUpReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:raltservice.CacheLookUpReq)
}
CacheLookUpReq::CacheLookUpReq(const CacheLookUpReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip_addr().size() > 0) {
    ip_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_addr_);
  }
  // @@protoc_insertion_point(copy_constructor:raltservice.CacheLookUpReq)
}

void CacheLookUpReq::SharedCtor() {
  ip_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CacheLookUpReq::~CacheLookUpReq() {
  // @@protoc_insertion_point(destructor:raltservice.CacheLookUpReq)
  SharedDtor();
}

void CacheLookUpReq::SharedDtor() {
  ip_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CacheLookUpReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CacheLookUpReq::descriptor() {
  ::protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CacheLookUpReq& CacheLookUpReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ralt_2dservice_2eproto::scc_info_CacheLookUpReq.base);
  return *internal_default_instance();
}


void CacheLookUpReq::Clear() {
// @@protoc_insertion_point(message_clear_start:raltservice.CacheLookUpReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CacheLookUpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raltservice.CacheLookUpReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ip_addr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "raltservice.CacheLookUpReq.ip_addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:raltservice.CacheLookUpReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raltservice.CacheLookUpReq)
  return false;
#undef DO_
}

void CacheLookUpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raltservice.CacheLookUpReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.CacheLookUpReq.ip_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ip_addr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:raltservice.CacheLookUpReq)
}

::google::protobuf::uint8* CacheLookUpReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:raltservice.CacheLookUpReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.CacheLookUpReq.ip_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ip_addr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raltservice.CacheLookUpReq)
  return target;
}

size_t CacheLookUpReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raltservice.CacheLookUpReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip_addr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CacheLookUpReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raltservice.CacheLookUpReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CacheLookUpReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CacheLookUpReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raltservice.CacheLookUpReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raltservice.CacheLookUpReq)
    MergeFrom(*source);
  }
}

void CacheLookUpReq::MergeFrom(const CacheLookUpReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raltservice.CacheLookUpReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip_addr().size() > 0) {

    ip_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_addr_);
  }
}

void CacheLookUpReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raltservice.CacheLookUpReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CacheLookUpReq::CopyFrom(const CacheLookUpReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raltservice.CacheLookUpReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CacheLookUpReq::IsInitialized() const {
  return true;
}

void CacheLookUpReq::Swap(CacheLookUpReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CacheLookUpReq::InternalSwap(CacheLookUpReq* other) {
  using std::swap;
  ip_addr_.Swap(&other->ip_addr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CacheLookUpReq::GetMetadata() const {
  protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CacheResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CacheResult::kCacheTotalHitsFieldNumber;
const int CacheResult::kBytesTotalFieldNumber;
const int CacheResult::kBytesUsedFieldNumber;
const int CacheResult::kNumDocsFieldNumber;
const int CacheResult::kCacheHitRatioFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CacheResult::CacheResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ralt_2dservice_2eproto::scc_info_CacheResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:raltservice.CacheResult)
}
CacheResult::CacheResult(const CacheResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&bytes_total_, &from.bytes_total_,
    static_cast<size_t>(reinterpret_cast<char*>(&cache_hit_ratio_) -
    reinterpret_cast<char*>(&bytes_total_)) + sizeof(cache_hit_ratio_));
  // @@protoc_insertion_point(copy_constructor:raltservice.CacheResult)
}

void CacheResult::SharedCtor() {
  ::memset(&bytes_total_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cache_hit_ratio_) -
      reinterpret_cast<char*>(&bytes_total_)) + sizeof(cache_hit_ratio_));
}

CacheResult::~CacheResult() {
  // @@protoc_insertion_point(destructor:raltservice.CacheResult)
  SharedDtor();
}

void CacheResult::SharedDtor() {
}

void CacheResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CacheResult::descriptor() {
  ::protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CacheResult& CacheResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ralt_2dservice_2eproto::scc_info_CacheResult.base);
  return *internal_default_instance();
}


void CacheResult::Clear() {
// @@protoc_insertion_point(message_clear_start:raltservice.CacheResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&bytes_total_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cache_hit_ratio_) -
      reinterpret_cast<char*>(&bytes_total_)) + sizeof(cache_hit_ratio_));
  _internal_metadata_.Clear();
}

bool CacheResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raltservice.CacheResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 cache_total_hits = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cache_total_hits_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 bytes_total = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bytes_total_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 bytes_used = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bytes_used_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 num_docs = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_docs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float cache_hit_ratio = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &cache_hit_ratio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:raltservice.CacheResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raltservice.CacheResult)
  return false;
#undef DO_
}

void CacheResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raltservice.CacheResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cache_total_hits = 1;
  if (this->cache_total_hits() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->cache_total_hits(), output);
  }

  // uint64 bytes_total = 2;
  if (this->bytes_total() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->bytes_total(), output);
  }

  // uint64 bytes_used = 3;
  if (this->bytes_used() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->bytes_used(), output);
  }

  // uint32 num_docs = 4;
  if (this->num_docs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->num_docs(), output);
  }

  // float cache_hit_ratio = 5;
  if (this->cache_hit_ratio() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->cache_hit_ratio(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:raltservice.CacheResult)
}

::google::protobuf::uint8* CacheResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:raltservice.CacheResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cache_total_hits = 1;
  if (this->cache_total_hits() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->cache_total_hits(), target);
  }

  // uint64 bytes_total = 2;
  if (this->bytes_total() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->bytes_total(), target);
  }

  // uint64 bytes_used = 3;
  if (this->bytes_used() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->bytes_used(), target);
  }

  // uint32 num_docs = 4;
  if (this->num_docs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->num_docs(), target);
  }

  // float cache_hit_ratio = 5;
  if (this->cache_hit_ratio() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->cache_hit_ratio(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raltservice.CacheResult)
  return target;
}

size_t CacheResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raltservice.CacheResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 bytes_total = 2;
  if (this->bytes_total() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->bytes_total());
  }

  // uint32 cache_total_hits = 1;
  if (this->cache_total_hits() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cache_total_hits());
  }

  // uint32 num_docs = 4;
  if (this->num_docs() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->num_docs());
  }

  // uint64 bytes_used = 3;
  if (this->bytes_used() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->bytes_used());
  }

  // float cache_hit_ratio = 5;
  if (this->cache_hit_ratio() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CacheResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raltservice.CacheResult)
  GOOGLE_DCHECK_NE(&from, this);
  const CacheResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CacheResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raltservice.CacheResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raltservice.CacheResult)
    MergeFrom(*source);
  }
}

void CacheResult::MergeFrom(const CacheResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raltservice.CacheResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bytes_total() != 0) {
    set_bytes_total(from.bytes_total());
  }
  if (from.cache_total_hits() != 0) {
    set_cache_total_hits(from.cache_total_hits());
  }
  if (from.num_docs() != 0) {
    set_num_docs(from.num_docs());
  }
  if (from.bytes_used() != 0) {
    set_bytes_used(from.bytes_used());
  }
  if (from.cache_hit_ratio() != 0) {
    set_cache_hit_ratio(from.cache_hit_ratio());
  }
}

void CacheResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raltservice.CacheResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CacheResult::CopyFrom(const CacheResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raltservice.CacheResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CacheResult::IsInitialized() const {
  return true;
}

void CacheResult::Swap(CacheResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CacheResult::InternalSwap(CacheResult* other) {
  using std::swap;
  swap(bytes_total_, other->bytes_total_);
  swap(cache_total_hits_, other->cache_total_hits_);
  swap(num_docs_, other->num_docs_);
  swap(bytes_used_, other->bytes_used_);
  swap(cache_hit_ratio_, other->cache_hit_ratio_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CacheResult::GetMetadata() const {
  protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FlowStatLookUpReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FlowStatLookUpReq::kIpAddrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FlowStatLookUpReq::FlowStatLookUpReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ralt_2dservice_2eproto::scc_info_FlowStatLookUpReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:raltservice.FlowStatLookUpReq)
}
FlowStatLookUpReq::FlowStatLookUpReq(const FlowStatLookUpReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip_addr().size() > 0) {
    ip_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_addr_);
  }
  // @@protoc_insertion_point(copy_constructor:raltservice.FlowStatLookUpReq)
}

void FlowStatLookUpReq::SharedCtor() {
  ip_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

FlowStatLookUpReq::~FlowStatLookUpReq() {
  // @@protoc_insertion_point(destructor:raltservice.FlowStatLookUpReq)
  SharedDtor();
}

void FlowStatLookUpReq::SharedDtor() {
  ip_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FlowStatLookUpReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FlowStatLookUpReq::descriptor() {
  ::protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FlowStatLookUpReq& FlowStatLookUpReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ralt_2dservice_2eproto::scc_info_FlowStatLookUpReq.base);
  return *internal_default_instance();
}


void FlowStatLookUpReq::Clear() {
// @@protoc_insertion_point(message_clear_start:raltservice.FlowStatLookUpReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool FlowStatLookUpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raltservice.FlowStatLookUpReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ip_addr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "raltservice.FlowStatLookUpReq.ip_addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:raltservice.FlowStatLookUpReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raltservice.FlowStatLookUpReq)
  return false;
#undef DO_
}

void FlowStatLookUpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raltservice.FlowStatLookUpReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.FlowStatLookUpReq.ip_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ip_addr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:raltservice.FlowStatLookUpReq)
}

::google::protobuf::uint8* FlowStatLookUpReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:raltservice.FlowStatLookUpReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.FlowStatLookUpReq.ip_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ip_addr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raltservice.FlowStatLookUpReq)
  return target;
}

size_t FlowStatLookUpReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raltservice.FlowStatLookUpReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip_addr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FlowStatLookUpReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raltservice.FlowStatLookUpReq)
  GOOGLE_DCHECK_NE(&from, this);
  const FlowStatLookUpReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FlowStatLookUpReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raltservice.FlowStatLookUpReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raltservice.FlowStatLookUpReq)
    MergeFrom(*source);
  }
}

void FlowStatLookUpReq::MergeFrom(const FlowStatLookUpReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raltservice.FlowStatLookUpReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip_addr().size() > 0) {

    ip_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_addr_);
  }
}

void FlowStatLookUpReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raltservice.FlowStatLookUpReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FlowStatLookUpReq::CopyFrom(const FlowStatLookUpReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raltservice.FlowStatLookUpReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FlowStatLookUpReq::IsInitialized() const {
  return true;
}

void FlowStatLookUpReq::Swap(FlowStatLookUpReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FlowStatLookUpReq::InternalSwap(FlowStatLookUpReq* other) {
  using std::swap;
  ip_addr_.Swap(&other->ip_addr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FlowStatLookUpReq::GetMetadata() const {
  protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FlowResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FlowResult::kUserAgentCurrentConnectionsCountFieldNumber;
const int FlowResult::kOriginServerCurrentConnectionsCountFieldNumber;
const int FlowResult::kCompletedRequestsFieldNumber;
const int FlowResult::kTotalIncomingConnectionsFieldNumber;
const int FlowResult::kIncomingRequestsFieldNumber;
const int FlowResult::kOutgoingRequestsFieldNumber;
const int FlowResult::kIncomingResponsesFieldNumber;
const int FlowResult::kTotalClientConnectionsFieldNumber;
const int FlowResult::kTotalClientConnectionsIpv4FieldNumber;
const int FlowResult::kTotalClientConnectionsIpv6FieldNumber;
const int FlowResult::kTotalServerConnectionsFieldNumber;
const int FlowResult::kUserAgentTotalBytesFieldNumber;
const int FlowResult::kOriginServerTotalBytesFieldNumber;
const int FlowResult::kBandwidthHitRatioFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FlowResult::FlowResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ralt_2dservice_2eproto::scc_info_FlowResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:raltservice.FlowResult)
}
FlowResult::FlowResult(const FlowResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&user_agent_current_connections_count_, &from.user_agent_current_connections_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&origin_server_total_bytes_) -
    reinterpret_cast<char*>(&user_agent_current_connections_count_)) + sizeof(origin_server_total_bytes_));
  // @@protoc_insertion_point(copy_constructor:raltservice.FlowResult)
}

void FlowResult::SharedCtor() {
  ::memset(&user_agent_current_connections_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&origin_server_total_bytes_) -
      reinterpret_cast<char*>(&user_agent_current_connections_count_)) + sizeof(origin_server_total_bytes_));
}

FlowResult::~FlowResult() {
  // @@protoc_insertion_point(destructor:raltservice.FlowResult)
  SharedDtor();
}

void FlowResult::SharedDtor() {
}

void FlowResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FlowResult::descriptor() {
  ::protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FlowResult& FlowResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ralt_2dservice_2eproto::scc_info_FlowResult.base);
  return *internal_default_instance();
}


void FlowResult::Clear() {
// @@protoc_insertion_point(message_clear_start:raltservice.FlowResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&user_agent_current_connections_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&origin_server_total_bytes_) -
      reinterpret_cast<char*>(&user_agent_current_connections_count_)) + sizeof(origin_server_total_bytes_));
  _internal_metadata_.Clear();
}

bool FlowResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raltservice.FlowResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_agent_current_connections_count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_agent_current_connections_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 origin_server_current_connections_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &origin_server_current_connections_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 completed_requests = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &completed_requests_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 total_incoming_connections = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_incoming_connections_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 incoming_requests = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &incoming_requests_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 outgoing_requests = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &outgoing_requests_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 incoming_responses = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &incoming_responses_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 total_client_connections = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_client_connections_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 total_client_connections_ipv4 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_client_connections_ipv4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 total_client_connections_ipv6 = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_client_connections_ipv6_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 total_server_connections = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_server_connections_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 user_agent_total_bytes = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &user_agent_total_bytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 origin_server_total_bytes = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &origin_server_total_bytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float bandwidth_hit_ratio = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(117u /* 117 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &bandwidth_hit_ratio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:raltservice.FlowResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raltservice.FlowResult)
  return false;
#undef DO_
}

void FlowResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raltservice.FlowResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_agent_current_connections_count = 1;
  if (this->user_agent_current_connections_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_agent_current_connections_count(), output);
  }

  // uint32 origin_server_current_connections_count = 2;
  if (this->origin_server_current_connections_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->origin_server_current_connections_count(), output);
  }

  // uint32 completed_requests = 3;
  if (this->completed_requests() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->completed_requests(), output);
  }

  // uint32 total_incoming_connections = 4;
  if (this->total_incoming_connections() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->total_incoming_connections(), output);
  }

  // uint32 incoming_requests = 5;
  if (this->incoming_requests() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->incoming_requests(), output);
  }

  // uint32 outgoing_requests = 6;
  if (this->outgoing_requests() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->outgoing_requests(), output);
  }

  // uint32 incoming_responses = 7;
  if (this->incoming_responses() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->incoming_responses(), output);
  }

  // uint32 total_client_connections = 8;
  if (this->total_client_connections() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->total_client_connections(), output);
  }

  // uint32 total_client_connections_ipv4 = 9;
  if (this->total_client_connections_ipv4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->total_client_connections_ipv4(), output);
  }

  // uint32 total_client_connections_ipv6 = 10;
  if (this->total_client_connections_ipv6() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->total_client_connections_ipv6(), output);
  }

  // uint32 total_server_connections = 11;
  if (this->total_server_connections() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->total_server_connections(), output);
  }

  // uint64 user_agent_total_bytes = 12;
  if (this->user_agent_total_bytes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(12, this->user_agent_total_bytes(), output);
  }

  // uint64 origin_server_total_bytes = 13;
  if (this->origin_server_total_bytes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(13, this->origin_server_total_bytes(), output);
  }

  // float bandwidth_hit_ratio = 14;
  if (this->bandwidth_hit_ratio() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(14, this->bandwidth_hit_ratio(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:raltservice.FlowResult)
}

::google::protobuf::uint8* FlowResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:raltservice.FlowResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_agent_current_connections_count = 1;
  if (this->user_agent_current_connections_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_agent_current_connections_count(), target);
  }

  // uint32 origin_server_current_connections_count = 2;
  if (this->origin_server_current_connections_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->origin_server_current_connections_count(), target);
  }

  // uint32 completed_requests = 3;
  if (this->completed_requests() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->completed_requests(), target);
  }

  // uint32 total_incoming_connections = 4;
  if (this->total_incoming_connections() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->total_incoming_connections(), target);
  }

  // uint32 incoming_requests = 5;
  if (this->incoming_requests() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->incoming_requests(), target);
  }

  // uint32 outgoing_requests = 6;
  if (this->outgoing_requests() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->outgoing_requests(), target);
  }

  // uint32 incoming_responses = 7;
  if (this->incoming_responses() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->incoming_responses(), target);
  }

  // uint32 total_client_connections = 8;
  if (this->total_client_connections() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->total_client_connections(), target);
  }

  // uint32 total_client_connections_ipv4 = 9;
  if (this->total_client_connections_ipv4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->total_client_connections_ipv4(), target);
  }

  // uint32 total_client_connections_ipv6 = 10;
  if (this->total_client_connections_ipv6() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->total_client_connections_ipv6(), target);
  }

  // uint32 total_server_connections = 11;
  if (this->total_server_connections() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->total_server_connections(), target);
  }

  // uint64 user_agent_total_bytes = 12;
  if (this->user_agent_total_bytes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(12, this->user_agent_total_bytes(), target);
  }

  // uint64 origin_server_total_bytes = 13;
  if (this->origin_server_total_bytes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(13, this->origin_server_total_bytes(), target);
  }

  // float bandwidth_hit_ratio = 14;
  if (this->bandwidth_hit_ratio() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(14, this->bandwidth_hit_ratio(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raltservice.FlowResult)
  return target;
}

size_t FlowResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raltservice.FlowResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 user_agent_current_connections_count = 1;
  if (this->user_agent_current_connections_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_agent_current_connections_count());
  }

  // uint32 origin_server_current_connections_count = 2;
  if (this->origin_server_current_connections_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->origin_server_current_connections_count());
  }

  // uint32 completed_requests = 3;
  if (this->completed_requests() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->completed_requests());
  }

  // uint32 total_incoming_connections = 4;
  if (this->total_incoming_connections() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->total_incoming_connections());
  }

  // uint32 incoming_requests = 5;
  if (this->incoming_requests() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->incoming_requests());
  }

  // uint32 outgoing_requests = 6;
  if (this->outgoing_requests() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->outgoing_requests());
  }

  // uint32 incoming_responses = 7;
  if (this->incoming_responses() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->incoming_responses());
  }

  // uint32 total_client_connections = 8;
  if (this->total_client_connections() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->total_client_connections());
  }

  // uint32 total_client_connections_ipv4 = 9;
  if (this->total_client_connections_ipv4() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->total_client_connections_ipv4());
  }

  // uint32 total_client_connections_ipv6 = 10;
  if (this->total_client_connections_ipv6() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->total_client_connections_ipv6());
  }

  // uint64 user_agent_total_bytes = 12;
  if (this->user_agent_total_bytes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->user_agent_total_bytes());
  }

  // uint32 total_server_connections = 11;
  if (this->total_server_connections() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->total_server_connections());
  }

  // float bandwidth_hit_ratio = 14;
  if (this->bandwidth_hit_ratio() != 0) {
    total_size += 1 + 4;
  }

  // uint64 origin_server_total_bytes = 13;
  if (this->origin_server_total_bytes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->origin_server_total_bytes());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FlowResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raltservice.FlowResult)
  GOOGLE_DCHECK_NE(&from, this);
  const FlowResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FlowResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raltservice.FlowResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raltservice.FlowResult)
    MergeFrom(*source);
  }
}

void FlowResult::MergeFrom(const FlowResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raltservice.FlowResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_agent_current_connections_count() != 0) {
    set_user_agent_current_connections_count(from.user_agent_current_connections_count());
  }
  if (from.origin_server_current_connections_count() != 0) {
    set_origin_server_current_connections_count(from.origin_server_current_connections_count());
  }
  if (from.completed_requests() != 0) {
    set_completed_requests(from.completed_requests());
  }
  if (from.total_incoming_connections() != 0) {
    set_total_incoming_connections(from.total_incoming_connections());
  }
  if (from.incoming_requests() != 0) {
    set_incoming_requests(from.incoming_requests());
  }
  if (from.outgoing_requests() != 0) {
    set_outgoing_requests(from.outgoing_requests());
  }
  if (from.incoming_responses() != 0) {
    set_incoming_responses(from.incoming_responses());
  }
  if (from.total_client_connections() != 0) {
    set_total_client_connections(from.total_client_connections());
  }
  if (from.total_client_connections_ipv4() != 0) {
    set_total_client_connections_ipv4(from.total_client_connections_ipv4());
  }
  if (from.total_client_connections_ipv6() != 0) {
    set_total_client_connections_ipv6(from.total_client_connections_ipv6());
  }
  if (from.user_agent_total_bytes() != 0) {
    set_user_agent_total_bytes(from.user_agent_total_bytes());
  }
  if (from.total_server_connections() != 0) {
    set_total_server_connections(from.total_server_connections());
  }
  if (from.bandwidth_hit_ratio() != 0) {
    set_bandwidth_hit_ratio(from.bandwidth_hit_ratio());
  }
  if (from.origin_server_total_bytes() != 0) {
    set_origin_server_total_bytes(from.origin_server_total_bytes());
  }
}

void FlowResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raltservice.FlowResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FlowResult::CopyFrom(const FlowResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raltservice.FlowResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FlowResult::IsInitialized() const {
  return true;
}

void FlowResult::Swap(FlowResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FlowResult::InternalSwap(FlowResult* other) {
  using std::swap;
  swap(user_agent_current_connections_count_, other->user_agent_current_connections_count_);
  swap(origin_server_current_connections_count_, other->origin_server_current_connections_count_);
  swap(completed_requests_, other->completed_requests_);
  swap(total_incoming_connections_, other->total_incoming_connections_);
  swap(incoming_requests_, other->incoming_requests_);
  swap(outgoing_requests_, other->outgoing_requests_);
  swap(incoming_responses_, other->incoming_responses_);
  swap(total_client_connections_, other->total_client_connections_);
  swap(total_client_connections_ipv4_, other->total_client_connections_ipv4_);
  swap(total_client_connections_ipv6_, other->total_client_connections_ipv6_);
  swap(user_agent_total_bytes_, other->user_agent_total_bytes_);
  swap(total_server_connections_, other->total_server_connections_);
  swap(bandwidth_hit_ratio_, other->bandwidth_hit_ratio_);
  swap(origin_server_total_bytes_, other->origin_server_total_bytes_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FlowResult::GetMetadata() const {
  protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LogInfoLookUpReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogInfoLookUpReq::kIpAddrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogInfoLookUpReq::LogInfoLookUpReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ralt_2dservice_2eproto::scc_info_LogInfoLookUpReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:raltservice.LogInfoLookUpReq)
}
LogInfoLookUpReq::LogInfoLookUpReq(const LogInfoLookUpReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip_addr().size() > 0) {
    ip_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_addr_);
  }
  // @@protoc_insertion_point(copy_constructor:raltservice.LogInfoLookUpReq)
}

void LogInfoLookUpReq::SharedCtor() {
  ip_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

LogInfoLookUpReq::~LogInfoLookUpReq() {
  // @@protoc_insertion_point(destructor:raltservice.LogInfoLookUpReq)
  SharedDtor();
}

void LogInfoLookUpReq::SharedDtor() {
  ip_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LogInfoLookUpReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LogInfoLookUpReq::descriptor() {
  ::protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LogInfoLookUpReq& LogInfoLookUpReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ralt_2dservice_2eproto::scc_info_LogInfoLookUpReq.base);
  return *internal_default_instance();
}


void LogInfoLookUpReq::Clear() {
// @@protoc_insertion_point(message_clear_start:raltservice.LogInfoLookUpReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool LogInfoLookUpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raltservice.LogInfoLookUpReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ip_addr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "raltservice.LogInfoLookUpReq.ip_addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:raltservice.LogInfoLookUpReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raltservice.LogInfoLookUpReq)
  return false;
#undef DO_
}

void LogInfoLookUpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raltservice.LogInfoLookUpReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.LogInfoLookUpReq.ip_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ip_addr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:raltservice.LogInfoLookUpReq)
}

::google::protobuf::uint8* LogInfoLookUpReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:raltservice.LogInfoLookUpReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.LogInfoLookUpReq.ip_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ip_addr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raltservice.LogInfoLookUpReq)
  return target;
}

size_t LogInfoLookUpReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raltservice.LogInfoLookUpReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip_addr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogInfoLookUpReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raltservice.LogInfoLookUpReq)
  GOOGLE_DCHECK_NE(&from, this);
  const LogInfoLookUpReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogInfoLookUpReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raltservice.LogInfoLookUpReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raltservice.LogInfoLookUpReq)
    MergeFrom(*source);
  }
}

void LogInfoLookUpReq::MergeFrom(const LogInfoLookUpReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raltservice.LogInfoLookUpReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip_addr().size() > 0) {

    ip_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_addr_);
  }
}

void LogInfoLookUpReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raltservice.LogInfoLookUpReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogInfoLookUpReq::CopyFrom(const LogInfoLookUpReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raltservice.LogInfoLookUpReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogInfoLookUpReq::IsInitialized() const {
  return true;
}

void LogInfoLookUpReq::Swap(LogInfoLookUpReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogInfoLookUpReq::InternalSwap(LogInfoLookUpReq* other) {
  using std::swap;
  ip_addr_.Swap(&other->ip_addr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LogInfoLookUpReq::GetMetadata() const {
  protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LogResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogResult::kLogFilesSpaceMbUsedFieldNumber;
const int LogResult::kMaxSpaceMbForLogsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogResult::LogResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ralt_2dservice_2eproto::scc_info_LogResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:raltservice.LogResult)
}
LogResult::LogResult(const LogResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&log_files_space_mb_used_, &from.log_files_space_mb_used_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_space_mb_for_logs_) -
    reinterpret_cast<char*>(&log_files_space_mb_used_)) + sizeof(max_space_mb_for_logs_));
  // @@protoc_insertion_point(copy_constructor:raltservice.LogResult)
}

void LogResult::SharedCtor() {
  ::memset(&log_files_space_mb_used_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_space_mb_for_logs_) -
      reinterpret_cast<char*>(&log_files_space_mb_used_)) + sizeof(max_space_mb_for_logs_));
}

LogResult::~LogResult() {
  // @@protoc_insertion_point(destructor:raltservice.LogResult)
  SharedDtor();
}

void LogResult::SharedDtor() {
}

void LogResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LogResult::descriptor() {
  ::protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LogResult& LogResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ralt_2dservice_2eproto::scc_info_LogResult.base);
  return *internal_default_instance();
}


void LogResult::Clear() {
// @@protoc_insertion_point(message_clear_start:raltservice.LogResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&log_files_space_mb_used_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_space_mb_for_logs_) -
      reinterpret_cast<char*>(&log_files_space_mb_used_)) + sizeof(max_space_mb_for_logs_));
  _internal_metadata_.Clear();
}

bool LogResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raltservice.LogResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 log_files_space_mb_used = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &log_files_space_mb_used_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 max_space_mb_for_logs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_space_mb_for_logs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:raltservice.LogResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raltservice.LogResult)
  return false;
#undef DO_
}

void LogResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raltservice.LogResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 log_files_space_mb_used = 1;
  if (this->log_files_space_mb_used() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->log_files_space_mb_used(), output);
  }

  // uint32 max_space_mb_for_logs = 2;
  if (this->max_space_mb_for_logs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->max_space_mb_for_logs(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:raltservice.LogResult)
}

::google::protobuf::uint8* LogResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:raltservice.LogResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 log_files_space_mb_used = 1;
  if (this->log_files_space_mb_used() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->log_files_space_mb_used(), target);
  }

  // uint32 max_space_mb_for_logs = 2;
  if (this->max_space_mb_for_logs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->max_space_mb_for_logs(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raltservice.LogResult)
  return target;
}

size_t LogResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raltservice.LogResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 log_files_space_mb_used = 1;
  if (this->log_files_space_mb_used() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->log_files_space_mb_used());
  }

  // uint32 max_space_mb_for_logs = 2;
  if (this->max_space_mb_for_logs() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->max_space_mb_for_logs());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raltservice.LogResult)
  GOOGLE_DCHECK_NE(&from, this);
  const LogResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raltservice.LogResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raltservice.LogResult)
    MergeFrom(*source);
  }
}

void LogResult::MergeFrom(const LogResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raltservice.LogResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.log_files_space_mb_used() != 0) {
    set_log_files_space_mb_used(from.log_files_space_mb_used());
  }
  if (from.max_space_mb_for_logs() != 0) {
    set_max_space_mb_for_logs(from.max_space_mb_for_logs());
  }
}

void LogResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raltservice.LogResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogResult::CopyFrom(const LogResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raltservice.LogResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogResult::IsInitialized() const {
  return true;
}

void LogResult::Swap(LogResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogResult::InternalSwap(LogResult* other) {
  using std::swap;
  swap(log_files_space_mb_used_, other->log_files_space_mb_used_);
  swap(max_space_mb_for_logs_, other->max_space_mb_for_logs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LogResult::GetMetadata() const {
  protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetRaltLogsReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRaltLogsReq::kIpAddrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRaltLogsReq::GetRaltLogsReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ralt_2dservice_2eproto::scc_info_GetRaltLogsReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:raltservice.GetRaltLogsReq)
}
GetRaltLogsReq::GetRaltLogsReq(const GetRaltLogsReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip_addr().size() > 0) {
    ip_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_addr_);
  }
  // @@protoc_insertion_point(copy_constructor:raltservice.GetRaltLogsReq)
}

void GetRaltLogsReq::SharedCtor() {
  ip_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetRaltLogsReq::~GetRaltLogsReq() {
  // @@protoc_insertion_point(destructor:raltservice.GetRaltLogsReq)
  SharedDtor();
}

void GetRaltLogsReq::SharedDtor() {
  ip_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetRaltLogsReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetRaltLogsReq::descriptor() {
  ::protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetRaltLogsReq& GetRaltLogsReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ralt_2dservice_2eproto::scc_info_GetRaltLogsReq.base);
  return *internal_default_instance();
}


void GetRaltLogsReq::Clear() {
// @@protoc_insertion_point(message_clear_start:raltservice.GetRaltLogsReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetRaltLogsReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raltservice.GetRaltLogsReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ip_addr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "raltservice.GetRaltLogsReq.ip_addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:raltservice.GetRaltLogsReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raltservice.GetRaltLogsReq)
  return false;
#undef DO_
}

void GetRaltLogsReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raltservice.GetRaltLogsReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.GetRaltLogsReq.ip_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ip_addr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:raltservice.GetRaltLogsReq)
}

::google::protobuf::uint8* GetRaltLogsReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:raltservice.GetRaltLogsReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.GetRaltLogsReq.ip_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ip_addr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raltservice.GetRaltLogsReq)
  return target;
}

size_t GetRaltLogsReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raltservice.GetRaltLogsReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip_addr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetRaltLogsReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raltservice.GetRaltLogsReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRaltLogsReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetRaltLogsReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raltservice.GetRaltLogsReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raltservice.GetRaltLogsReq)
    MergeFrom(*source);
  }
}

void GetRaltLogsReq::MergeFrom(const GetRaltLogsReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raltservice.GetRaltLogsReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip_addr().size() > 0) {

    ip_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_addr_);
  }
}

void GetRaltLogsReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raltservice.GetRaltLogsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRaltLogsReq::CopyFrom(const GetRaltLogsReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raltservice.GetRaltLogsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRaltLogsReq::IsInitialized() const {
  return true;
}

void GetRaltLogsReq::Swap(GetRaltLogsReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRaltLogsReq::InternalSwap(GetRaltLogsReq* other) {
  using std::swap;
  ip_addr_.Swap(&other->ip_addr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetRaltLogsReq::GetMetadata() const {
  protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RaltLogs::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RaltLogs::kLogsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RaltLogs::RaltLogs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ralt_2dservice_2eproto::scc_info_RaltLogs.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:raltservice.RaltLogs)
}
RaltLogs::RaltLogs(const RaltLogs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  logs_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.logs().size() > 0) {
    logs_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logs_);
  }
  // @@protoc_insertion_point(copy_constructor:raltservice.RaltLogs)
}

void RaltLogs::SharedCtor() {
  logs_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RaltLogs::~RaltLogs() {
  // @@protoc_insertion_point(destructor:raltservice.RaltLogs)
  SharedDtor();
}

void RaltLogs::SharedDtor() {
  logs_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RaltLogs::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RaltLogs::descriptor() {
  ::protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RaltLogs& RaltLogs::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ralt_2dservice_2eproto::scc_info_RaltLogs.base);
  return *internal_default_instance();
}


void RaltLogs::Clear() {
// @@protoc_insertion_point(message_clear_start:raltservice.RaltLogs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  logs_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool RaltLogs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raltservice.RaltLogs)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes logs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_logs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:raltservice.RaltLogs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raltservice.RaltLogs)
  return false;
#undef DO_
}

void RaltLogs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raltservice.RaltLogs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes logs = 1;
  if (this->logs().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->logs(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:raltservice.RaltLogs)
}

::google::protobuf::uint8* RaltLogs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:raltservice.RaltLogs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes logs = 1;
  if (this->logs().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->logs(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raltservice.RaltLogs)
  return target;
}

size_t RaltLogs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raltservice.RaltLogs)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes logs = 1;
  if (this->logs().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->logs());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RaltLogs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raltservice.RaltLogs)
  GOOGLE_DCHECK_NE(&from, this);
  const RaltLogs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RaltLogs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raltservice.RaltLogs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raltservice.RaltLogs)
    MergeFrom(*source);
  }
}

void RaltLogs::MergeFrom(const RaltLogs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raltservice.RaltLogs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.logs().size() > 0) {

    logs_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logs_);
  }
}

void RaltLogs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raltservice.RaltLogs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RaltLogs::CopyFrom(const RaltLogs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raltservice.RaltLogs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RaltLogs::IsInitialized() const {
  return true;
}

void RaltLogs::Swap(RaltLogs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RaltLogs::InternalSwap(RaltLogs* other) {
  using std::swap;
  logs_.Swap(&other->logs_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RaltLogs::GetMetadata() const {
  protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetBasicConfigReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetBasicConfigReq::kIpAddrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBasicConfigReq::GetBasicConfigReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ralt_2dservice_2eproto::scc_info_GetBasicConfigReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:raltservice.GetBasicConfigReq)
}
GetBasicConfigReq::GetBasicConfigReq(const GetBasicConfigReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip_addr().size() > 0) {
    ip_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_addr_);
  }
  // @@protoc_insertion_point(copy_constructor:raltservice.GetBasicConfigReq)
}

void GetBasicConfigReq::SharedCtor() {
  ip_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetBasicConfigReq::~GetBasicConfigReq() {
  // @@protoc_insertion_point(destructor:raltservice.GetBasicConfigReq)
  SharedDtor();
}

void GetBasicConfigReq::SharedDtor() {
  ip_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetBasicConfigReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetBasicConfigReq::descriptor() {
  ::protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetBasicConfigReq& GetBasicConfigReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ralt_2dservice_2eproto::scc_info_GetBasicConfigReq.base);
  return *internal_default_instance();
}


void GetBasicConfigReq::Clear() {
// @@protoc_insertion_point(message_clear_start:raltservice.GetBasicConfigReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetBasicConfigReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raltservice.GetBasicConfigReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ip_addr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "raltservice.GetBasicConfigReq.ip_addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:raltservice.GetBasicConfigReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raltservice.GetBasicConfigReq)
  return false;
#undef DO_
}

void GetBasicConfigReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raltservice.GetBasicConfigReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.GetBasicConfigReq.ip_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ip_addr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:raltservice.GetBasicConfigReq)
}

::google::protobuf::uint8* GetBasicConfigReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:raltservice.GetBasicConfigReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.GetBasicConfigReq.ip_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ip_addr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raltservice.GetBasicConfigReq)
  return target;
}

size_t GetBasicConfigReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raltservice.GetBasicConfigReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip_addr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetBasicConfigReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raltservice.GetBasicConfigReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBasicConfigReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBasicConfigReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raltservice.GetBasicConfigReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raltservice.GetBasicConfigReq)
    MergeFrom(*source);
  }
}

void GetBasicConfigReq::MergeFrom(const GetBasicConfigReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raltservice.GetBasicConfigReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip_addr().size() > 0) {

    ip_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_addr_);
  }
}

void GetBasicConfigReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raltservice.GetBasicConfigReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBasicConfigReq::CopyFrom(const GetBasicConfigReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raltservice.GetBasicConfigReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBasicConfigReq::IsInitialized() const {
  return true;
}

void GetBasicConfigReq::Swap(GetBasicConfigReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBasicConfigReq::InternalSwap(GetBasicConfigReq* other) {
  using std::swap;
  ip_addr_.Swap(&other->ip_addr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetBasicConfigReq::GetMetadata() const {
  protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BasicConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BasicConfig::kLoggingEnabledFieldNumber;
const int BasicConfig::kMaxSpaceMbForLogsFieldNumber;
const int BasicConfig::kRollingEnabledFieldNumber;
const int BasicConfig::kServerPortsFieldNumber;
const int BasicConfig::kStorageCacheSizeFieldNumber;
const int BasicConfig::kHttpCacheEnabledFieldNumber;
const int BasicConfig::kConnectionsThrottleFieldNumber;
const int BasicConfig::kIpResolveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BasicConfig::BasicConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ralt_2dservice_2eproto::scc_info_BasicConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:raltservice.BasicConfig)
}
BasicConfig::BasicConfig(const BasicConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  server_ports_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server_ports().size() > 0) {
    server_ports_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_ports_);
  }
  ip_resolve_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip_resolve().size() > 0) {
    ip_resolve_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_resolve_);
  }
  ::memcpy(&logging_enabled_, &from.logging_enabled_,
    static_cast<size_t>(reinterpret_cast<char*>(&connections_throttle_) -
    reinterpret_cast<char*>(&logging_enabled_)) + sizeof(connections_throttle_));
  // @@protoc_insertion_point(copy_constructor:raltservice.BasicConfig)
}

void BasicConfig::SharedCtor() {
  server_ports_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_resolve_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&logging_enabled_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&connections_throttle_) -
      reinterpret_cast<char*>(&logging_enabled_)) + sizeof(connections_throttle_));
}

BasicConfig::~BasicConfig() {
  // @@protoc_insertion_point(destructor:raltservice.BasicConfig)
  SharedDtor();
}

void BasicConfig::SharedDtor() {
  server_ports_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_resolve_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BasicConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BasicConfig::descriptor() {
  ::protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BasicConfig& BasicConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ralt_2dservice_2eproto::scc_info_BasicConfig.base);
  return *internal_default_instance();
}


void BasicConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:raltservice.BasicConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  server_ports_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_resolve_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&logging_enabled_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&connections_throttle_) -
      reinterpret_cast<char*>(&logging_enabled_)) + sizeof(connections_throttle_));
  _internal_metadata_.Clear();
}

bool BasicConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raltservice.BasicConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 logging_enabled = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &logging_enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 max_space_mb_for_logs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_space_mb_for_logs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 rolling_enabled = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rolling_enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string server_ports = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_ports()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server_ports().data(), static_cast<int>(this->server_ports().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "raltservice.BasicConfig.server_ports"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 storage_cache_size = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &storage_cache_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 http_cache_enabled = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &http_cache_enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 connections_throttle = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &connections_throttle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ip_resolve = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_resolve()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip_resolve().data(), static_cast<int>(this->ip_resolve().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "raltservice.BasicConfig.ip_resolve"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:raltservice.BasicConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raltservice.BasicConfig)
  return false;
#undef DO_
}

void BasicConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raltservice.BasicConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 logging_enabled = 1;
  if (this->logging_enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->logging_enabled(), output);
  }

  // uint32 max_space_mb_for_logs = 2;
  if (this->max_space_mb_for_logs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->max_space_mb_for_logs(), output);
  }

  // uint32 rolling_enabled = 3;
  if (this->rolling_enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->rolling_enabled(), output);
  }

  // string server_ports = 4;
  if (this->server_ports().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_ports().data(), static_cast<int>(this->server_ports().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.BasicConfig.server_ports");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->server_ports(), output);
  }

  // uint32 storage_cache_size = 5;
  if (this->storage_cache_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->storage_cache_size(), output);
  }

  // uint32 http_cache_enabled = 6;
  if (this->http_cache_enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->http_cache_enabled(), output);
  }

  // uint32 connections_throttle = 7;
  if (this->connections_throttle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->connections_throttle(), output);
  }

  // string ip_resolve = 8;
  if (this->ip_resolve().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_resolve().data(), static_cast<int>(this->ip_resolve().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.BasicConfig.ip_resolve");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->ip_resolve(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:raltservice.BasicConfig)
}

::google::protobuf::uint8* BasicConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:raltservice.BasicConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 logging_enabled = 1;
  if (this->logging_enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->logging_enabled(), target);
  }

  // uint32 max_space_mb_for_logs = 2;
  if (this->max_space_mb_for_logs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->max_space_mb_for_logs(), target);
  }

  // uint32 rolling_enabled = 3;
  if (this->rolling_enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->rolling_enabled(), target);
  }

  // string server_ports = 4;
  if (this->server_ports().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_ports().data(), static_cast<int>(this->server_ports().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.BasicConfig.server_ports");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->server_ports(), target);
  }

  // uint32 storage_cache_size = 5;
  if (this->storage_cache_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->storage_cache_size(), target);
  }

  // uint32 http_cache_enabled = 6;
  if (this->http_cache_enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->http_cache_enabled(), target);
  }

  // uint32 connections_throttle = 7;
  if (this->connections_throttle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->connections_throttle(), target);
  }

  // string ip_resolve = 8;
  if (this->ip_resolve().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_resolve().data(), static_cast<int>(this->ip_resolve().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.BasicConfig.ip_resolve");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->ip_resolve(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raltservice.BasicConfig)
  return target;
}

size_t BasicConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raltservice.BasicConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string server_ports = 4;
  if (this->server_ports().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server_ports());
  }

  // string ip_resolve = 8;
  if (this->ip_resolve().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip_resolve());
  }

  // uint32 logging_enabled = 1;
  if (this->logging_enabled() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->logging_enabled());
  }

  // uint32 max_space_mb_for_logs = 2;
  if (this->max_space_mb_for_logs() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->max_space_mb_for_logs());
  }

  // uint32 rolling_enabled = 3;
  if (this->rolling_enabled() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rolling_enabled());
  }

  // uint32 storage_cache_size = 5;
  if (this->storage_cache_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->storage_cache_size());
  }

  // uint32 http_cache_enabled = 6;
  if (this->http_cache_enabled() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->http_cache_enabled());
  }

  // uint32 connections_throttle = 7;
  if (this->connections_throttle() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->connections_throttle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BasicConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raltservice.BasicConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const BasicConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BasicConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raltservice.BasicConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raltservice.BasicConfig)
    MergeFrom(*source);
  }
}

void BasicConfig::MergeFrom(const BasicConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raltservice.BasicConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.server_ports().size() > 0) {

    server_ports_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_ports_);
  }
  if (from.ip_resolve().size() > 0) {

    ip_resolve_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_resolve_);
  }
  if (from.logging_enabled() != 0) {
    set_logging_enabled(from.logging_enabled());
  }
  if (from.max_space_mb_for_logs() != 0) {
    set_max_space_mb_for_logs(from.max_space_mb_for_logs());
  }
  if (from.rolling_enabled() != 0) {
    set_rolling_enabled(from.rolling_enabled());
  }
  if (from.storage_cache_size() != 0) {
    set_storage_cache_size(from.storage_cache_size());
  }
  if (from.http_cache_enabled() != 0) {
    set_http_cache_enabled(from.http_cache_enabled());
  }
  if (from.connections_throttle() != 0) {
    set_connections_throttle(from.connections_throttle());
  }
}

void BasicConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raltservice.BasicConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BasicConfig::CopyFrom(const BasicConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raltservice.BasicConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BasicConfig::IsInitialized() const {
  return true;
}

void BasicConfig::Swap(BasicConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BasicConfig::InternalSwap(BasicConfig* other) {
  using std::swap;
  server_ports_.Swap(&other->server_ports_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ip_resolve_.Swap(&other->ip_resolve_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(logging_enabled_, other->logging_enabled_);
  swap(max_space_mb_for_logs_, other->max_space_mb_for_logs_);
  swap(rolling_enabled_, other->rolling_enabled_);
  swap(storage_cache_size_, other->storage_cache_size_);
  swap(http_cache_enabled_, other->http_cache_enabled_);
  swap(connections_throttle_, other->connections_throttle_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BasicConfig::GetMetadata() const {
  protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetBasicConfigRsp::InitAsDefaultInstance() {
  ::raltservice::_GetBasicConfigRsp_default_instance_._instance.get_mutable()->basic_config_ = const_cast< ::raltservice::BasicConfig*>(
      ::raltservice::BasicConfig::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetBasicConfigRsp::kBasicConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBasicConfigRsp::GetBasicConfigRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ralt_2dservice_2eproto::scc_info_GetBasicConfigRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:raltservice.GetBasicConfigRsp)
}
GetBasicConfigRsp::GetBasicConfigRsp(const GetBasicConfigRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_basic_config()) {
    basic_config_ = new ::raltservice::BasicConfig(*from.basic_config_);
  } else {
    basic_config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:raltservice.GetBasicConfigRsp)
}

void GetBasicConfigRsp::SharedCtor() {
  basic_config_ = NULL;
}

GetBasicConfigRsp::~GetBasicConfigRsp() {
  // @@protoc_insertion_point(destructor:raltservice.GetBasicConfigRsp)
  SharedDtor();
}

void GetBasicConfigRsp::SharedDtor() {
  if (this != internal_default_instance()) delete basic_config_;
}

void GetBasicConfigRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetBasicConfigRsp::descriptor() {
  ::protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetBasicConfigRsp& GetBasicConfigRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ralt_2dservice_2eproto::scc_info_GetBasicConfigRsp.base);
  return *internal_default_instance();
}


void GetBasicConfigRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:raltservice.GetBasicConfigRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && basic_config_ != NULL) {
    delete basic_config_;
  }
  basic_config_ = NULL;
  _internal_metadata_.Clear();
}

bool GetBasicConfigRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raltservice.GetBasicConfigRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .raltservice.BasicConfig basic_config = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_basic_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:raltservice.GetBasicConfigRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raltservice.GetBasicConfigRsp)
  return false;
#undef DO_
}

void GetBasicConfigRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raltservice.GetBasicConfigRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .raltservice.BasicConfig basic_config = 1;
  if (this->has_basic_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_basic_config(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:raltservice.GetBasicConfigRsp)
}

::google::protobuf::uint8* GetBasicConfigRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:raltservice.GetBasicConfigRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .raltservice.BasicConfig basic_config = 1;
  if (this->has_basic_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_basic_config(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raltservice.GetBasicConfigRsp)
  return target;
}

size_t GetBasicConfigRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raltservice.GetBasicConfigRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .raltservice.BasicConfig basic_config = 1;
  if (this->has_basic_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *basic_config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetBasicConfigRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raltservice.GetBasicConfigRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBasicConfigRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBasicConfigRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raltservice.GetBasicConfigRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raltservice.GetBasicConfigRsp)
    MergeFrom(*source);
  }
}

void GetBasicConfigRsp::MergeFrom(const GetBasicConfigRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raltservice.GetBasicConfigRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_basic_config()) {
    mutable_basic_config()->::raltservice::BasicConfig::MergeFrom(from.basic_config());
  }
}

void GetBasicConfigRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raltservice.GetBasicConfigRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBasicConfigRsp::CopyFrom(const GetBasicConfigRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raltservice.GetBasicConfigRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBasicConfigRsp::IsInitialized() const {
  return true;
}

void GetBasicConfigRsp::Swap(GetBasicConfigRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBasicConfigRsp::InternalSwap(GetBasicConfigRsp* other) {
  using std::swap;
  swap(basic_config_, other->basic_config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetBasicConfigRsp::GetMetadata() const {
  protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetBasicConfigReq::InitAsDefaultInstance() {
  ::raltservice::_SetBasicConfigReq_default_instance_._instance.get_mutable()->basic_config_ = const_cast< ::raltservice::BasicConfig*>(
      ::raltservice::BasicConfig::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetBasicConfigReq::kIpAddrFieldNumber;
const int SetBasicConfigReq::kBasicConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetBasicConfigReq::SetBasicConfigReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ralt_2dservice_2eproto::scc_info_SetBasicConfigReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:raltservice.SetBasicConfigReq)
}
SetBasicConfigReq::SetBasicConfigReq(const SetBasicConfigReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip_addr().size() > 0) {
    ip_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_addr_);
  }
  if (from.has_basic_config()) {
    basic_config_ = new ::raltservice::BasicConfig(*from.basic_config_);
  } else {
    basic_config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:raltservice.SetBasicConfigReq)
}

void SetBasicConfigReq::SharedCtor() {
  ip_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  basic_config_ = NULL;
}

SetBasicConfigReq::~SetBasicConfigReq() {
  // @@protoc_insertion_point(destructor:raltservice.SetBasicConfigReq)
  SharedDtor();
}

void SetBasicConfigReq::SharedDtor() {
  ip_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete basic_config_;
}

void SetBasicConfigReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SetBasicConfigReq::descriptor() {
  ::protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetBasicConfigReq& SetBasicConfigReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ralt_2dservice_2eproto::scc_info_SetBasicConfigReq.base);
  return *internal_default_instance();
}


void SetBasicConfigReq::Clear() {
// @@protoc_insertion_point(message_clear_start:raltservice.SetBasicConfigReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && basic_config_ != NULL) {
    delete basic_config_;
  }
  basic_config_ = NULL;
  _internal_metadata_.Clear();
}

bool SetBasicConfigReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raltservice.SetBasicConfigReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ip_addr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "raltservice.SetBasicConfigReq.ip_addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .raltservice.BasicConfig basic_config = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_basic_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:raltservice.SetBasicConfigReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raltservice.SetBasicConfigReq)
  return false;
#undef DO_
}

void SetBasicConfigReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raltservice.SetBasicConfigReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.SetBasicConfigReq.ip_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ip_addr(), output);
  }

  // .raltservice.BasicConfig basic_config = 2;
  if (this->has_basic_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_basic_config(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:raltservice.SetBasicConfigReq)
}

::google::protobuf::uint8* SetBasicConfigReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:raltservice.SetBasicConfigReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.SetBasicConfigReq.ip_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ip_addr(), target);
  }

  // .raltservice.BasicConfig basic_config = 2;
  if (this->has_basic_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_basic_config(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raltservice.SetBasicConfigReq)
  return target;
}

size_t SetBasicConfigReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raltservice.SetBasicConfigReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip_addr());
  }

  // .raltservice.BasicConfig basic_config = 2;
  if (this->has_basic_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *basic_config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetBasicConfigReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raltservice.SetBasicConfigReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SetBasicConfigReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetBasicConfigReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raltservice.SetBasicConfigReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raltservice.SetBasicConfigReq)
    MergeFrom(*source);
  }
}

void SetBasicConfigReq::MergeFrom(const SetBasicConfigReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raltservice.SetBasicConfigReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip_addr().size() > 0) {

    ip_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_addr_);
  }
  if (from.has_basic_config()) {
    mutable_basic_config()->::raltservice::BasicConfig::MergeFrom(from.basic_config());
  }
}

void SetBasicConfigReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raltservice.SetBasicConfigReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetBasicConfigReq::CopyFrom(const SetBasicConfigReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raltservice.SetBasicConfigReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetBasicConfigReq::IsInitialized() const {
  return true;
}

void SetBasicConfigReq::Swap(SetBasicConfigReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetBasicConfigReq::InternalSwap(SetBasicConfigReq* other) {
  using std::swap;
  ip_addr_.Swap(&other->ip_addr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(basic_config_, other->basic_config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SetBasicConfigReq::GetMetadata() const {
  protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetBasicConfigRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetBasicConfigRsp::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetBasicConfigRsp::SetBasicConfigRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ralt_2dservice_2eproto::scc_info_SetBasicConfigRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:raltservice.SetBasicConfigRsp)
}
SetBasicConfigRsp::SetBasicConfigRsp(const SetBasicConfigRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:raltservice.SetBasicConfigRsp)
}

void SetBasicConfigRsp::SharedCtor() {
  result_ = 0u;
}

SetBasicConfigRsp::~SetBasicConfigRsp() {
  // @@protoc_insertion_point(destructor:raltservice.SetBasicConfigRsp)
  SharedDtor();
}

void SetBasicConfigRsp::SharedDtor() {
}

void SetBasicConfigRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SetBasicConfigRsp::descriptor() {
  ::protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetBasicConfigRsp& SetBasicConfigRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ralt_2dservice_2eproto::scc_info_SetBasicConfigRsp.base);
  return *internal_default_instance();
}


void SetBasicConfigRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:raltservice.SetBasicConfigRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0u;
  _internal_metadata_.Clear();
}

bool SetBasicConfigRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raltservice.SetBasicConfigRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:raltservice.SetBasicConfigRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raltservice.SetBasicConfigRsp)
  return false;
#undef DO_
}

void SetBasicConfigRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raltservice.SetBasicConfigRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:raltservice.SetBasicConfigRsp)
}

::google::protobuf::uint8* SetBasicConfigRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:raltservice.SetBasicConfigRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raltservice.SetBasicConfigRsp)
  return target;
}

size_t SetBasicConfigRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raltservice.SetBasicConfigRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetBasicConfigRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raltservice.SetBasicConfigRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetBasicConfigRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetBasicConfigRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raltservice.SetBasicConfigRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raltservice.SetBasicConfigRsp)
    MergeFrom(*source);
  }
}

void SetBasicConfigRsp::MergeFrom(const SetBasicConfigRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raltservice.SetBasicConfigRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    set_result(from.result());
  }
}

void SetBasicConfigRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raltservice.SetBasicConfigRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetBasicConfigRsp::CopyFrom(const SetBasicConfigRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raltservice.SetBasicConfigRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetBasicConfigRsp::IsInitialized() const {
  return true;
}

void SetBasicConfigRsp::Swap(SetBasicConfigRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetBasicConfigRsp::InternalSwap(SetBasicConfigRsp* other) {
  using std::swap;
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SetBasicConfigRsp::GetMetadata() const {
  protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Domain::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Domain::kTypeFieldNumber;
const int Domain::kDomainStrFieldNumber;
const int Domain::kAppendOrReplaceStrFieldNumber;
const int Domain::kPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Domain::Domain()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ralt_2dservice_2eproto::scc_info_Domain.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:raltservice.Domain)
}
Domain::Domain(const Domain& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  domain_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.domain_str().size() > 0) {
    domain_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_str_);
  }
  append_or_replace_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.append_or_replace_str().size() > 0) {
    append_or_replace_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.append_or_replace_str_);
  }
  port_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.port().size() > 0) {
    port_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.port_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:raltservice.Domain)
}

void Domain::SharedCtor() {
  domain_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  append_or_replace_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

Domain::~Domain() {
  // @@protoc_insertion_point(destructor:raltservice.Domain)
  SharedDtor();
}

void Domain::SharedDtor() {
  domain_str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  append_or_replace_str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Domain::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Domain::descriptor() {
  ::protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Domain& Domain::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ralt_2dservice_2eproto::scc_info_Domain.base);
  return *internal_default_instance();
}


void Domain::Clear() {
// @@protoc_insertion_point(message_clear_start:raltservice.Domain)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  domain_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  append_or_replace_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _internal_metadata_.Clear();
}

bool Domain::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raltservice.Domain)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .raltservice.DomainType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::raltservice::DomainType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string domain_str = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_domain_str()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->domain_str().data(), static_cast<int>(this->domain_str().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "raltservice.Domain.domain_str"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string append_or_replace_str = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_append_or_replace_str()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->append_or_replace_str().data(), static_cast<int>(this->append_or_replace_str().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "raltservice.Domain.append_or_replace_str"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string port = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_port()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->port().data(), static_cast<int>(this->port().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "raltservice.Domain.port"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:raltservice.Domain)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raltservice.Domain)
  return false;
#undef DO_
}

void Domain::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raltservice.Domain)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .raltservice.DomainType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // string domain_str = 2;
  if (this->domain_str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->domain_str().data(), static_cast<int>(this->domain_str().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.Domain.domain_str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->domain_str(), output);
  }

  // string append_or_replace_str = 3;
  if (this->append_or_replace_str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->append_or_replace_str().data(), static_cast<int>(this->append_or_replace_str().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.Domain.append_or_replace_str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->append_or_replace_str(), output);
  }

  // string port = 4;
  if (this->port().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->port().data(), static_cast<int>(this->port().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.Domain.port");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->port(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:raltservice.Domain)
}

::google::protobuf::uint8* Domain::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:raltservice.Domain)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .raltservice.DomainType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // string domain_str = 2;
  if (this->domain_str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->domain_str().data(), static_cast<int>(this->domain_str().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.Domain.domain_str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->domain_str(), target);
  }

  // string append_or_replace_str = 3;
  if (this->append_or_replace_str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->append_or_replace_str().data(), static_cast<int>(this->append_or_replace_str().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.Domain.append_or_replace_str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->append_or_replace_str(), target);
  }

  // string port = 4;
  if (this->port().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->port().data(), static_cast<int>(this->port().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.Domain.port");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->port(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raltservice.Domain)
  return target;
}

size_t Domain::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raltservice.Domain)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string domain_str = 2;
  if (this->domain_str().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->domain_str());
  }

  // string append_or_replace_str = 3;
  if (this->append_or_replace_str().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->append_or_replace_str());
  }

  // string port = 4;
  if (this->port().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->port());
  }

  // .raltservice.DomainType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Domain::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raltservice.Domain)
  GOOGLE_DCHECK_NE(&from, this);
  const Domain* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Domain>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raltservice.Domain)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raltservice.Domain)
    MergeFrom(*source);
  }
}

void Domain::MergeFrom(const Domain& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raltservice.Domain)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.domain_str().size() > 0) {

    domain_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_str_);
  }
  if (from.append_or_replace_str().size() > 0) {

    append_or_replace_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.append_or_replace_str_);
  }
  if (from.port().size() > 0) {

    port_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.port_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Domain::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raltservice.Domain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Domain::CopyFrom(const Domain& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raltservice.Domain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Domain::IsInitialized() const {
  return true;
}

void Domain::Swap(Domain* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Domain::InternalSwap(Domain* other) {
  using std::swap;
  domain_str_.Swap(&other->domain_str_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  append_or_replace_str_.Swap(&other->append_or_replace_str_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  port_.Swap(&other->port_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Domain::GetMetadata() const {
  protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetAllDomainReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAllDomainReq::kIpAddrFieldNumber;
const int GetAllDomainReq::kPageSizeFieldNumber;
const int GetAllDomainReq::kPageNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAllDomainReq::GetAllDomainReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ralt_2dservice_2eproto::scc_info_GetAllDomainReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:raltservice.GetAllDomainReq)
}
GetAllDomainReq::GetAllDomainReq(const GetAllDomainReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip_addr().size() > 0) {
    ip_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_addr_);
  }
  ::memcpy(&page_size_, &from.page_size_,
    static_cast<size_t>(reinterpret_cast<char*>(&page_number_) -
    reinterpret_cast<char*>(&page_size_)) + sizeof(page_number_));
  // @@protoc_insertion_point(copy_constructor:raltservice.GetAllDomainReq)
}

void GetAllDomainReq::SharedCtor() {
  ip_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&page_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&page_number_) -
      reinterpret_cast<char*>(&page_size_)) + sizeof(page_number_));
}

GetAllDomainReq::~GetAllDomainReq() {
  // @@protoc_insertion_point(destructor:raltservice.GetAllDomainReq)
  SharedDtor();
}

void GetAllDomainReq::SharedDtor() {
  ip_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetAllDomainReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetAllDomainReq::descriptor() {
  ::protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetAllDomainReq& GetAllDomainReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ralt_2dservice_2eproto::scc_info_GetAllDomainReq.base);
  return *internal_default_instance();
}


void GetAllDomainReq::Clear() {
// @@protoc_insertion_point(message_clear_start:raltservice.GetAllDomainReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&page_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&page_number_) -
      reinterpret_cast<char*>(&page_size_)) + sizeof(page_number_));
  _internal_metadata_.Clear();
}

bool GetAllDomainReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raltservice.GetAllDomainReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ip_addr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "raltservice.GetAllDomainReq.ip_addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 page_size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 page_number = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &page_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:raltservice.GetAllDomainReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raltservice.GetAllDomainReq)
  return false;
#undef DO_
}

void GetAllDomainReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raltservice.GetAllDomainReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.GetAllDomainReq.ip_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ip_addr(), output);
  }

  // uint32 page_size = 2;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->page_size(), output);
  }

  // uint32 page_number = 3;
  if (this->page_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->page_number(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:raltservice.GetAllDomainReq)
}

::google::protobuf::uint8* GetAllDomainReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:raltservice.GetAllDomainReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.GetAllDomainReq.ip_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ip_addr(), target);
  }

  // uint32 page_size = 2;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->page_size(), target);
  }

  // uint32 page_number = 3;
  if (this->page_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->page_number(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raltservice.GetAllDomainReq)
  return target;
}

size_t GetAllDomainReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raltservice.GetAllDomainReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip_addr());
  }

  // uint32 page_size = 2;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->page_size());
  }

  // uint32 page_number = 3;
  if (this->page_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->page_number());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAllDomainReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raltservice.GetAllDomainReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAllDomainReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAllDomainReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raltservice.GetAllDomainReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raltservice.GetAllDomainReq)
    MergeFrom(*source);
  }
}

void GetAllDomainReq::MergeFrom(const GetAllDomainReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raltservice.GetAllDomainReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip_addr().size() > 0) {

    ip_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_addr_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
  if (from.page_number() != 0) {
    set_page_number(from.page_number());
  }
}

void GetAllDomainReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raltservice.GetAllDomainReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAllDomainReq::CopyFrom(const GetAllDomainReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raltservice.GetAllDomainReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAllDomainReq::IsInitialized() const {
  return true;
}

void GetAllDomainReq::Swap(GetAllDomainReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAllDomainReq::InternalSwap(GetAllDomainReq* other) {
  using std::swap;
  ip_addr_.Swap(&other->ip_addr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_size_, other->page_size_);
  swap(page_number_, other->page_number_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetAllDomainReq::GetMetadata() const {
  protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetAllDomainRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAllDomainRsp::kDomainFieldNumber;
const int GetAllDomainRsp::kDomainTotalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAllDomainRsp::GetAllDomainRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ralt_2dservice_2eproto::scc_info_GetAllDomainRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:raltservice.GetAllDomainRsp)
}
GetAllDomainRsp::GetAllDomainRsp(const GetAllDomainRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      domain_(from.domain_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  domain_total_ = from.domain_total_;
  // @@protoc_insertion_point(copy_constructor:raltservice.GetAllDomainRsp)
}

void GetAllDomainRsp::SharedCtor() {
  domain_total_ = 0u;
}

GetAllDomainRsp::~GetAllDomainRsp() {
  // @@protoc_insertion_point(destructor:raltservice.GetAllDomainRsp)
  SharedDtor();
}

void GetAllDomainRsp::SharedDtor() {
}

void GetAllDomainRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetAllDomainRsp::descriptor() {
  ::protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetAllDomainRsp& GetAllDomainRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ralt_2dservice_2eproto::scc_info_GetAllDomainRsp.base);
  return *internal_default_instance();
}


void GetAllDomainRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:raltservice.GetAllDomainRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  domain_.Clear();
  domain_total_ = 0u;
  _internal_metadata_.Clear();
}

bool GetAllDomainRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raltservice.GetAllDomainRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .raltservice.Domain domain = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_domain()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 domain_total = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &domain_total_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:raltservice.GetAllDomainRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raltservice.GetAllDomainRsp)
  return false;
#undef DO_
}

void GetAllDomainRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raltservice.GetAllDomainRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .raltservice.Domain domain = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->domain_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->domain(static_cast<int>(i)),
      output);
  }

  // uint32 domain_total = 2;
  if (this->domain_total() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->domain_total(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:raltservice.GetAllDomainRsp)
}

::google::protobuf::uint8* GetAllDomainRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:raltservice.GetAllDomainRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .raltservice.Domain domain = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->domain_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->domain(static_cast<int>(i)), deterministic, target);
  }

  // uint32 domain_total = 2;
  if (this->domain_total() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->domain_total(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raltservice.GetAllDomainRsp)
  return target;
}

size_t GetAllDomainRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raltservice.GetAllDomainRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .raltservice.Domain domain = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->domain_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->domain(static_cast<int>(i)));
    }
  }

  // uint32 domain_total = 2;
  if (this->domain_total() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->domain_total());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAllDomainRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raltservice.GetAllDomainRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAllDomainRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAllDomainRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raltservice.GetAllDomainRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raltservice.GetAllDomainRsp)
    MergeFrom(*source);
  }
}

void GetAllDomainRsp::MergeFrom(const GetAllDomainRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raltservice.GetAllDomainRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  domain_.MergeFrom(from.domain_);
  if (from.domain_total() != 0) {
    set_domain_total(from.domain_total());
  }
}

void GetAllDomainRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raltservice.GetAllDomainRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAllDomainRsp::CopyFrom(const GetAllDomainRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raltservice.GetAllDomainRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAllDomainRsp::IsInitialized() const {
  return true;
}

void GetAllDomainRsp::Swap(GetAllDomainRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAllDomainRsp::InternalSwap(GetAllDomainRsp* other) {
  using std::swap;
  CastToBase(&domain_)->InternalSwap(CastToBase(&other->domain_));
  swap(domain_total_, other->domain_total_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetAllDomainRsp::GetMetadata() const {
  protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateDomainReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateDomainReq::kIpAddrFieldNumber;
const int UpdateDomainReq::kDomainFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateDomainReq::UpdateDomainReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ralt_2dservice_2eproto::scc_info_UpdateDomainReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:raltservice.UpdateDomainReq)
}
UpdateDomainReq::UpdateDomainReq(const UpdateDomainReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      domain_(from.domain_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip_addr().size() > 0) {
    ip_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_addr_);
  }
  // @@protoc_insertion_point(copy_constructor:raltservice.UpdateDomainReq)
}

void UpdateDomainReq::SharedCtor() {
  ip_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UpdateDomainReq::~UpdateDomainReq() {
  // @@protoc_insertion_point(destructor:raltservice.UpdateDomainReq)
  SharedDtor();
}

void UpdateDomainReq::SharedDtor() {
  ip_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UpdateDomainReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateDomainReq::descriptor() {
  ::protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateDomainReq& UpdateDomainReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ralt_2dservice_2eproto::scc_info_UpdateDomainReq.base);
  return *internal_default_instance();
}


void UpdateDomainReq::Clear() {
// @@protoc_insertion_point(message_clear_start:raltservice.UpdateDomainReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  domain_.Clear();
  ip_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool UpdateDomainReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raltservice.UpdateDomainReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ip_addr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "raltservice.UpdateDomainReq.ip_addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .raltservice.Domain domain = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_domain()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:raltservice.UpdateDomainReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raltservice.UpdateDomainReq)
  return false;
#undef DO_
}

void UpdateDomainReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raltservice.UpdateDomainReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.UpdateDomainReq.ip_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ip_addr(), output);
  }

  // repeated .raltservice.Domain domain = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->domain_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->domain(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:raltservice.UpdateDomainReq)
}

::google::protobuf::uint8* UpdateDomainReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:raltservice.UpdateDomainReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.UpdateDomainReq.ip_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ip_addr(), target);
  }

  // repeated .raltservice.Domain domain = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->domain_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->domain(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raltservice.UpdateDomainReq)
  return target;
}

size_t UpdateDomainReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raltservice.UpdateDomainReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .raltservice.Domain domain = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->domain_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->domain(static_cast<int>(i)));
    }
  }

  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip_addr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateDomainReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raltservice.UpdateDomainReq)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateDomainReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateDomainReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raltservice.UpdateDomainReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raltservice.UpdateDomainReq)
    MergeFrom(*source);
  }
}

void UpdateDomainReq::MergeFrom(const UpdateDomainReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raltservice.UpdateDomainReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  domain_.MergeFrom(from.domain_);
  if (from.ip_addr().size() > 0) {

    ip_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_addr_);
  }
}

void UpdateDomainReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raltservice.UpdateDomainReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateDomainReq::CopyFrom(const UpdateDomainReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raltservice.UpdateDomainReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateDomainReq::IsInitialized() const {
  return true;
}

void UpdateDomainReq::Swap(UpdateDomainReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateDomainReq::InternalSwap(UpdateDomainReq* other) {
  using std::swap;
  CastToBase(&domain_)->InternalSwap(CastToBase(&other->domain_));
  ip_addr_.Swap(&other->ip_addr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateDomainReq::GetMetadata() const {
  protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateDomainRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateDomainRsp::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateDomainRsp::UpdateDomainRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ralt_2dservice_2eproto::scc_info_UpdateDomainRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:raltservice.UpdateDomainRsp)
}
UpdateDomainRsp::UpdateDomainRsp(const UpdateDomainRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:raltservice.UpdateDomainRsp)
}

void UpdateDomainRsp::SharedCtor() {
  result_ = 0u;
}

UpdateDomainRsp::~UpdateDomainRsp() {
  // @@protoc_insertion_point(destructor:raltservice.UpdateDomainRsp)
  SharedDtor();
}

void UpdateDomainRsp::SharedDtor() {
}

void UpdateDomainRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateDomainRsp::descriptor() {
  ::protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateDomainRsp& UpdateDomainRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ralt_2dservice_2eproto::scc_info_UpdateDomainRsp.base);
  return *internal_default_instance();
}


void UpdateDomainRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:raltservice.UpdateDomainRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0u;
  _internal_metadata_.Clear();
}

bool UpdateDomainRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raltservice.UpdateDomainRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:raltservice.UpdateDomainRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raltservice.UpdateDomainRsp)
  return false;
#undef DO_
}

void UpdateDomainRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raltservice.UpdateDomainRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:raltservice.UpdateDomainRsp)
}

::google::protobuf::uint8* UpdateDomainRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:raltservice.UpdateDomainRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raltservice.UpdateDomainRsp)
  return target;
}

size_t UpdateDomainRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raltservice.UpdateDomainRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateDomainRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raltservice.UpdateDomainRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateDomainRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateDomainRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raltservice.UpdateDomainRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raltservice.UpdateDomainRsp)
    MergeFrom(*source);
  }
}

void UpdateDomainRsp::MergeFrom(const UpdateDomainRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raltservice.UpdateDomainRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    set_result(from.result());
  }
}

void UpdateDomainRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raltservice.UpdateDomainRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateDomainRsp::CopyFrom(const UpdateDomainRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raltservice.UpdateDomainRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateDomainRsp::IsInitialized() const {
  return true;
}

void UpdateDomainRsp::Swap(UpdateDomainRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateDomainRsp::InternalSwap(UpdateDomainRsp* other) {
  using std::swap;
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateDomainRsp::GetMetadata() const {
  protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetDomainReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetDomainReq::kIpAddrFieldNumber;
const int GetDomainReq::kDomainStrFieldNumber;
const int GetDomainReq::kTransformedDomainFieldNumber;
const int GetDomainReq::kPageSizeFieldNumber;
const int GetDomainReq::kPageNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetDomainReq::GetDomainReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ralt_2dservice_2eproto::scc_info_GetDomainReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:raltservice.GetDomainReq)
}
GetDomainReq::GetDomainReq(const GetDomainReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip_addr().size() > 0) {
    ip_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_addr_);
  }
  domain_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.domain_str().size() > 0) {
    domain_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_str_);
  }
  transformed_domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.transformed_domain().size() > 0) {
    transformed_domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transformed_domain_);
  }
  ::memcpy(&page_size_, &from.page_size_,
    static_cast<size_t>(reinterpret_cast<char*>(&page_number_) -
    reinterpret_cast<char*>(&page_size_)) + sizeof(page_number_));
  // @@protoc_insertion_point(copy_constructor:raltservice.GetDomainReq)
}

void GetDomainReq::SharedCtor() {
  ip_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transformed_domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&page_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&page_number_) -
      reinterpret_cast<char*>(&page_size_)) + sizeof(page_number_));
}

GetDomainReq::~GetDomainReq() {
  // @@protoc_insertion_point(destructor:raltservice.GetDomainReq)
  SharedDtor();
}

void GetDomainReq::SharedDtor() {
  ip_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transformed_domain_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetDomainReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetDomainReq::descriptor() {
  ::protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetDomainReq& GetDomainReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ralt_2dservice_2eproto::scc_info_GetDomainReq.base);
  return *internal_default_instance();
}


void GetDomainReq::Clear() {
// @@protoc_insertion_point(message_clear_start:raltservice.GetDomainReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transformed_domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&page_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&page_number_) -
      reinterpret_cast<char*>(&page_size_)) + sizeof(page_number_));
  _internal_metadata_.Clear();
}

bool GetDomainReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raltservice.GetDomainReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ip_addr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "raltservice.GetDomainReq.ip_addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string domain_str = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_domain_str()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->domain_str().data(), static_cast<int>(this->domain_str().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "raltservice.GetDomainReq.domain_str"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string transformed_domain = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_transformed_domain()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->transformed_domain().data(), static_cast<int>(this->transformed_domain().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "raltservice.GetDomainReq.transformed_domain"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 page_size = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 page_number = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &page_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:raltservice.GetDomainReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raltservice.GetDomainReq)
  return false;
#undef DO_
}

void GetDomainReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raltservice.GetDomainReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.GetDomainReq.ip_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ip_addr(), output);
  }

  // string domain_str = 2;
  if (this->domain_str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->domain_str().data(), static_cast<int>(this->domain_str().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.GetDomainReq.domain_str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->domain_str(), output);
  }

  // string transformed_domain = 3;
  if (this->transformed_domain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->transformed_domain().data(), static_cast<int>(this->transformed_domain().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.GetDomainReq.transformed_domain");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->transformed_domain(), output);
  }

  // uint32 page_size = 4;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->page_size(), output);
  }

  // uint32 page_number = 5;
  if (this->page_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->page_number(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:raltservice.GetDomainReq)
}

::google::protobuf::uint8* GetDomainReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:raltservice.GetDomainReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.GetDomainReq.ip_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ip_addr(), target);
  }

  // string domain_str = 2;
  if (this->domain_str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->domain_str().data(), static_cast<int>(this->domain_str().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.GetDomainReq.domain_str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->domain_str(), target);
  }

  // string transformed_domain = 3;
  if (this->transformed_domain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->transformed_domain().data(), static_cast<int>(this->transformed_domain().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.GetDomainReq.transformed_domain");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->transformed_domain(), target);
  }

  // uint32 page_size = 4;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->page_size(), target);
  }

  // uint32 page_number = 5;
  if (this->page_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->page_number(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raltservice.GetDomainReq)
  return target;
}

size_t GetDomainReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raltservice.GetDomainReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip_addr());
  }

  // string domain_str = 2;
  if (this->domain_str().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->domain_str());
  }

  // string transformed_domain = 3;
  if (this->transformed_domain().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->transformed_domain());
  }

  // uint32 page_size = 4;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->page_size());
  }

  // uint32 page_number = 5;
  if (this->page_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->page_number());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetDomainReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raltservice.GetDomainReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetDomainReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetDomainReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raltservice.GetDomainReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raltservice.GetDomainReq)
    MergeFrom(*source);
  }
}

void GetDomainReq::MergeFrom(const GetDomainReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raltservice.GetDomainReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip_addr().size() > 0) {

    ip_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_addr_);
  }
  if (from.domain_str().size() > 0) {

    domain_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_str_);
  }
  if (from.transformed_domain().size() > 0) {

    transformed_domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transformed_domain_);
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
  if (from.page_number() != 0) {
    set_page_number(from.page_number());
  }
}

void GetDomainReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raltservice.GetDomainReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDomainReq::CopyFrom(const GetDomainReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raltservice.GetDomainReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDomainReq::IsInitialized() const {
  return true;
}

void GetDomainReq::Swap(GetDomainReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetDomainReq::InternalSwap(GetDomainReq* other) {
  using std::swap;
  ip_addr_.Swap(&other->ip_addr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  domain_str_.Swap(&other->domain_str_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  transformed_domain_.Swap(&other->transformed_domain_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_size_, other->page_size_);
  swap(page_number_, other->page_number_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetDomainReq::GetMetadata() const {
  protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetDomainRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetDomainRsp::kDomainFieldNumber;
const int GetDomainRsp::kDomainTotalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetDomainRsp::GetDomainRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ralt_2dservice_2eproto::scc_info_GetDomainRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:raltservice.GetDomainRsp)
}
GetDomainRsp::GetDomainRsp(const GetDomainRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      domain_(from.domain_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  domain_total_ = from.domain_total_;
  // @@protoc_insertion_point(copy_constructor:raltservice.GetDomainRsp)
}

void GetDomainRsp::SharedCtor() {
  domain_total_ = 0u;
}

GetDomainRsp::~GetDomainRsp() {
  // @@protoc_insertion_point(destructor:raltservice.GetDomainRsp)
  SharedDtor();
}

void GetDomainRsp::SharedDtor() {
}

void GetDomainRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetDomainRsp::descriptor() {
  ::protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetDomainRsp& GetDomainRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ralt_2dservice_2eproto::scc_info_GetDomainRsp.base);
  return *internal_default_instance();
}


void GetDomainRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:raltservice.GetDomainRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  domain_.Clear();
  domain_total_ = 0u;
  _internal_metadata_.Clear();
}

bool GetDomainRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raltservice.GetDomainRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .raltservice.Domain domain = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_domain()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 domain_total = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &domain_total_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:raltservice.GetDomainRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raltservice.GetDomainRsp)
  return false;
#undef DO_
}

void GetDomainRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raltservice.GetDomainRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .raltservice.Domain domain = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->domain_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->domain(static_cast<int>(i)),
      output);
  }

  // uint32 domain_total = 2;
  if (this->domain_total() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->domain_total(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:raltservice.GetDomainRsp)
}

::google::protobuf::uint8* GetDomainRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:raltservice.GetDomainRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .raltservice.Domain domain = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->domain_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->domain(static_cast<int>(i)), deterministic, target);
  }

  // uint32 domain_total = 2;
  if (this->domain_total() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->domain_total(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raltservice.GetDomainRsp)
  return target;
}

size_t GetDomainRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raltservice.GetDomainRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .raltservice.Domain domain = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->domain_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->domain(static_cast<int>(i)));
    }
  }

  // uint32 domain_total = 2;
  if (this->domain_total() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->domain_total());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetDomainRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raltservice.GetDomainRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetDomainRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetDomainRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raltservice.GetDomainRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raltservice.GetDomainRsp)
    MergeFrom(*source);
  }
}

void GetDomainRsp::MergeFrom(const GetDomainRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raltservice.GetDomainRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  domain_.MergeFrom(from.domain_);
  if (from.domain_total() != 0) {
    set_domain_total(from.domain_total());
  }
}

void GetDomainRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raltservice.GetDomainRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDomainRsp::CopyFrom(const GetDomainRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raltservice.GetDomainRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDomainRsp::IsInitialized() const {
  return true;
}

void GetDomainRsp::Swap(GetDomainRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetDomainRsp::InternalSwap(GetDomainRsp* other) {
  using std::swap;
  CastToBase(&domain_)->InternalSwap(CastToBase(&other->domain_));
  swap(domain_total_, other->domain_total_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetDomainRsp::GetMetadata() const {
  protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddDomainReq::InitAsDefaultInstance() {
  ::raltservice::_AddDomainReq_default_instance_._instance.get_mutable()->domain_ = const_cast< ::raltservice::Domain*>(
      ::raltservice::Domain::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddDomainReq::kIpAddrFieldNumber;
const int AddDomainReq::kDomainFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddDomainReq::AddDomainReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ralt_2dservice_2eproto::scc_info_AddDomainReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:raltservice.AddDomainReq)
}
AddDomainReq::AddDomainReq(const AddDomainReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip_addr().size() > 0) {
    ip_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_addr_);
  }
  if (from.has_domain()) {
    domain_ = new ::raltservice::Domain(*from.domain_);
  } else {
    domain_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:raltservice.AddDomainReq)
}

void AddDomainReq::SharedCtor() {
  ip_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_ = NULL;
}

AddDomainReq::~AddDomainReq() {
  // @@protoc_insertion_point(destructor:raltservice.AddDomainReq)
  SharedDtor();
}

void AddDomainReq::SharedDtor() {
  ip_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete domain_;
}

void AddDomainReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AddDomainReq::descriptor() {
  ::protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddDomainReq& AddDomainReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ralt_2dservice_2eproto::scc_info_AddDomainReq.base);
  return *internal_default_instance();
}


void AddDomainReq::Clear() {
// @@protoc_insertion_point(message_clear_start:raltservice.AddDomainReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && domain_ != NULL) {
    delete domain_;
  }
  domain_ = NULL;
  _internal_metadata_.Clear();
}

bool AddDomainReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raltservice.AddDomainReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ip_addr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "raltservice.AddDomainReq.ip_addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .raltservice.Domain domain = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_domain()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:raltservice.AddDomainReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raltservice.AddDomainReq)
  return false;
#undef DO_
}

void AddDomainReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raltservice.AddDomainReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.AddDomainReq.ip_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ip_addr(), output);
  }

  // .raltservice.Domain domain = 2;
  if (this->has_domain()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_domain(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:raltservice.AddDomainReq)
}

::google::protobuf::uint8* AddDomainReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:raltservice.AddDomainReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.AddDomainReq.ip_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ip_addr(), target);
  }

  // .raltservice.Domain domain = 2;
  if (this->has_domain()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_domain(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raltservice.AddDomainReq)
  return target;
}

size_t AddDomainReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raltservice.AddDomainReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip_addr());
  }

  // .raltservice.Domain domain = 2;
  if (this->has_domain()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *domain_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddDomainReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raltservice.AddDomainReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AddDomainReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddDomainReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raltservice.AddDomainReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raltservice.AddDomainReq)
    MergeFrom(*source);
  }
}

void AddDomainReq::MergeFrom(const AddDomainReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raltservice.AddDomainReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip_addr().size() > 0) {

    ip_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_addr_);
  }
  if (from.has_domain()) {
    mutable_domain()->::raltservice::Domain::MergeFrom(from.domain());
  }
}

void AddDomainReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raltservice.AddDomainReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddDomainReq::CopyFrom(const AddDomainReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raltservice.AddDomainReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddDomainReq::IsInitialized() const {
  return true;
}

void AddDomainReq::Swap(AddDomainReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddDomainReq::InternalSwap(AddDomainReq* other) {
  using std::swap;
  ip_addr_.Swap(&other->ip_addr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(domain_, other->domain_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AddDomainReq::GetMetadata() const {
  protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddDomainRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddDomainRsp::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddDomainRsp::AddDomainRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ralt_2dservice_2eproto::scc_info_AddDomainRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:raltservice.AddDomainRsp)
}
AddDomainRsp::AddDomainRsp(const AddDomainRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:raltservice.AddDomainRsp)
}

void AddDomainRsp::SharedCtor() {
  result_ = 0u;
}

AddDomainRsp::~AddDomainRsp() {
  // @@protoc_insertion_point(destructor:raltservice.AddDomainRsp)
  SharedDtor();
}

void AddDomainRsp::SharedDtor() {
}

void AddDomainRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AddDomainRsp::descriptor() {
  ::protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddDomainRsp& AddDomainRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ralt_2dservice_2eproto::scc_info_AddDomainRsp.base);
  return *internal_default_instance();
}


void AddDomainRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:raltservice.AddDomainRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0u;
  _internal_metadata_.Clear();
}

bool AddDomainRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raltservice.AddDomainRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:raltservice.AddDomainRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raltservice.AddDomainRsp)
  return false;
#undef DO_
}

void AddDomainRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raltservice.AddDomainRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:raltservice.AddDomainRsp)
}

::google::protobuf::uint8* AddDomainRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:raltservice.AddDomainRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raltservice.AddDomainRsp)
  return target;
}

size_t AddDomainRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raltservice.AddDomainRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddDomainRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raltservice.AddDomainRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddDomainRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddDomainRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raltservice.AddDomainRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raltservice.AddDomainRsp)
    MergeFrom(*source);
  }
}

void AddDomainRsp::MergeFrom(const AddDomainRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raltservice.AddDomainRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    set_result(from.result());
  }
}

void AddDomainRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raltservice.AddDomainRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddDomainRsp::CopyFrom(const AddDomainRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raltservice.AddDomainRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddDomainRsp::IsInitialized() const {
  return true;
}

void AddDomainRsp::Swap(AddDomainRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddDomainRsp::InternalSwap(AddDomainRsp* other) {
  using std::swap;
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AddDomainRsp::GetMetadata() const {
  protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteDomainReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteDomainReq::kIpAddrFieldNumber;
const int DeleteDomainReq::kDomainStrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteDomainReq::DeleteDomainReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ralt_2dservice_2eproto::scc_info_DeleteDomainReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:raltservice.DeleteDomainReq)
}
DeleteDomainReq::DeleteDomainReq(const DeleteDomainReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip_addr().size() > 0) {
    ip_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_addr_);
  }
  domain_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.domain_str().size() > 0) {
    domain_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_str_);
  }
  // @@protoc_insertion_point(copy_constructor:raltservice.DeleteDomainReq)
}

void DeleteDomainReq::SharedCtor() {
  ip_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeleteDomainReq::~DeleteDomainReq() {
  // @@protoc_insertion_point(destructor:raltservice.DeleteDomainReq)
  SharedDtor();
}

void DeleteDomainReq::SharedDtor() {
  ip_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteDomainReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteDomainReq::descriptor() {
  ::protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteDomainReq& DeleteDomainReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ralt_2dservice_2eproto::scc_info_DeleteDomainReq.base);
  return *internal_default_instance();
}


void DeleteDomainReq::Clear() {
// @@protoc_insertion_point(message_clear_start:raltservice.DeleteDomainReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DeleteDomainReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raltservice.DeleteDomainReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ip_addr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "raltservice.DeleteDomainReq.ip_addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string domain_str = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_domain_str()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->domain_str().data(), static_cast<int>(this->domain_str().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "raltservice.DeleteDomainReq.domain_str"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:raltservice.DeleteDomainReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raltservice.DeleteDomainReq)
  return false;
#undef DO_
}

void DeleteDomainReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raltservice.DeleteDomainReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.DeleteDomainReq.ip_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ip_addr(), output);
  }

  // string domain_str = 2;
  if (this->domain_str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->domain_str().data(), static_cast<int>(this->domain_str().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.DeleteDomainReq.domain_str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->domain_str(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:raltservice.DeleteDomainReq)
}

::google::protobuf::uint8* DeleteDomainReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:raltservice.DeleteDomainReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.DeleteDomainReq.ip_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ip_addr(), target);
  }

  // string domain_str = 2;
  if (this->domain_str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->domain_str().data(), static_cast<int>(this->domain_str().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.DeleteDomainReq.domain_str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->domain_str(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raltservice.DeleteDomainReq)
  return target;
}

size_t DeleteDomainReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raltservice.DeleteDomainReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip_addr());
  }

  // string domain_str = 2;
  if (this->domain_str().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->domain_str());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteDomainReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raltservice.DeleteDomainReq)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteDomainReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteDomainReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raltservice.DeleteDomainReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raltservice.DeleteDomainReq)
    MergeFrom(*source);
  }
}

void DeleteDomainReq::MergeFrom(const DeleteDomainReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raltservice.DeleteDomainReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip_addr().size() > 0) {

    ip_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_addr_);
  }
  if (from.domain_str().size() > 0) {

    domain_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_str_);
  }
}

void DeleteDomainReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raltservice.DeleteDomainReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteDomainReq::CopyFrom(const DeleteDomainReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raltservice.DeleteDomainReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteDomainReq::IsInitialized() const {
  return true;
}

void DeleteDomainReq::Swap(DeleteDomainReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteDomainReq::InternalSwap(DeleteDomainReq* other) {
  using std::swap;
  ip_addr_.Swap(&other->ip_addr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  domain_str_.Swap(&other->domain_str_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteDomainReq::GetMetadata() const {
  protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteDomainRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteDomainRsp::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteDomainRsp::DeleteDomainRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ralt_2dservice_2eproto::scc_info_DeleteDomainRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:raltservice.DeleteDomainRsp)
}
DeleteDomainRsp::DeleteDomainRsp(const DeleteDomainRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:raltservice.DeleteDomainRsp)
}

void DeleteDomainRsp::SharedCtor() {
  result_ = 0u;
}

DeleteDomainRsp::~DeleteDomainRsp() {
  // @@protoc_insertion_point(destructor:raltservice.DeleteDomainRsp)
  SharedDtor();
}

void DeleteDomainRsp::SharedDtor() {
}

void DeleteDomainRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteDomainRsp::descriptor() {
  ::protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteDomainRsp& DeleteDomainRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ralt_2dservice_2eproto::scc_info_DeleteDomainRsp.base);
  return *internal_default_instance();
}


void DeleteDomainRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:raltservice.DeleteDomainRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0u;
  _internal_metadata_.Clear();
}

bool DeleteDomainRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raltservice.DeleteDomainRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:raltservice.DeleteDomainRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raltservice.DeleteDomainRsp)
  return false;
#undef DO_
}

void DeleteDomainRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raltservice.DeleteDomainRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:raltservice.DeleteDomainRsp)
}

::google::protobuf::uint8* DeleteDomainRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:raltservice.DeleteDomainRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raltservice.DeleteDomainRsp)
  return target;
}

size_t DeleteDomainRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raltservice.DeleteDomainRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteDomainRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raltservice.DeleteDomainRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteDomainRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteDomainRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raltservice.DeleteDomainRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raltservice.DeleteDomainRsp)
    MergeFrom(*source);
  }
}

void DeleteDomainRsp::MergeFrom(const DeleteDomainRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raltservice.DeleteDomainRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    set_result(from.result());
  }
}

void DeleteDomainRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raltservice.DeleteDomainRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteDomainRsp::CopyFrom(const DeleteDomainRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raltservice.DeleteDomainRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteDomainRsp::IsInitialized() const {
  return true;
}

void DeleteDomainRsp::Swap(DeleteDomainRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteDomainRsp::InternalSwap(DeleteDomainRsp* other) {
  using std::swap;
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteDomainRsp::GetMetadata() const {
  protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetMiscReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetMiscReq::kIpAddrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetMiscReq::GetMiscReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ralt_2dservice_2eproto::scc_info_GetMiscReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:raltservice.GetMiscReq)
}
GetMiscReq::GetMiscReq(const GetMiscReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip_addr().size() > 0) {
    ip_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_addr_);
  }
  // @@protoc_insertion_point(copy_constructor:raltservice.GetMiscReq)
}

void GetMiscReq::SharedCtor() {
  ip_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetMiscReq::~GetMiscReq() {
  // @@protoc_insertion_point(destructor:raltservice.GetMiscReq)
  SharedDtor();
}

void GetMiscReq::SharedDtor() {
  ip_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetMiscReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetMiscReq::descriptor() {
  ::protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetMiscReq& GetMiscReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ralt_2dservice_2eproto::scc_info_GetMiscReq.base);
  return *internal_default_instance();
}


void GetMiscReq::Clear() {
// @@protoc_insertion_point(message_clear_start:raltservice.GetMiscReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetMiscReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raltservice.GetMiscReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ip_addr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "raltservice.GetMiscReq.ip_addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:raltservice.GetMiscReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raltservice.GetMiscReq)
  return false;
#undef DO_
}

void GetMiscReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raltservice.GetMiscReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.GetMiscReq.ip_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ip_addr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:raltservice.GetMiscReq)
}

::google::protobuf::uint8* GetMiscReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:raltservice.GetMiscReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.GetMiscReq.ip_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ip_addr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raltservice.GetMiscReq)
  return target;
}

size_t GetMiscReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raltservice.GetMiscReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip_addr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetMiscReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raltservice.GetMiscReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMiscReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetMiscReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raltservice.GetMiscReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raltservice.GetMiscReq)
    MergeFrom(*source);
  }
}

void GetMiscReq::MergeFrom(const GetMiscReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raltservice.GetMiscReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip_addr().size() > 0) {

    ip_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_addr_);
  }
}

void GetMiscReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raltservice.GetMiscReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMiscReq::CopyFrom(const GetMiscReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raltservice.GetMiscReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMiscReq::IsInitialized() const {
  return true;
}

void GetMiscReq::Swap(GetMiscReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetMiscReq::InternalSwap(GetMiscReq* other) {
  using std::swap;
  ip_addr_.Swap(&other->ip_addr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetMiscReq::GetMetadata() const {
  protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetMiscRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetMiscRsp::kRaltFilterTypeDefaultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetMiscRsp::GetMiscRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ralt_2dservice_2eproto::scc_info_GetMiscRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:raltservice.GetMiscRsp)
}
GetMiscRsp::GetMiscRsp(const GetMiscRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ralt_filter_type_default_ = from.ralt_filter_type_default_;
  // @@protoc_insertion_point(copy_constructor:raltservice.GetMiscRsp)
}

void GetMiscRsp::SharedCtor() {
  ralt_filter_type_default_ = 0;
}

GetMiscRsp::~GetMiscRsp() {
  // @@protoc_insertion_point(destructor:raltservice.GetMiscRsp)
  SharedDtor();
}

void GetMiscRsp::SharedDtor() {
}

void GetMiscRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetMiscRsp::descriptor() {
  ::protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetMiscRsp& GetMiscRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ralt_2dservice_2eproto::scc_info_GetMiscRsp.base);
  return *internal_default_instance();
}


void GetMiscRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:raltservice.GetMiscRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ralt_filter_type_default_ = 0;
  _internal_metadata_.Clear();
}

bool GetMiscRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raltservice.GetMiscRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .raltservice.MiscSwitch ralt_filter_type_default = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ralt_filter_type_default(static_cast< ::raltservice::MiscSwitch >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:raltservice.GetMiscRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raltservice.GetMiscRsp)
  return false;
#undef DO_
}

void GetMiscRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raltservice.GetMiscRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .raltservice.MiscSwitch ralt_filter_type_default = 1;
  if (this->ralt_filter_type_default() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ralt_filter_type_default(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:raltservice.GetMiscRsp)
}

::google::protobuf::uint8* GetMiscRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:raltservice.GetMiscRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .raltservice.MiscSwitch ralt_filter_type_default = 1;
  if (this->ralt_filter_type_default() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ralt_filter_type_default(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raltservice.GetMiscRsp)
  return target;
}

size_t GetMiscRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raltservice.GetMiscRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .raltservice.MiscSwitch ralt_filter_type_default = 1;
  if (this->ralt_filter_type_default() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ralt_filter_type_default());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetMiscRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raltservice.GetMiscRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMiscRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetMiscRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raltservice.GetMiscRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raltservice.GetMiscRsp)
    MergeFrom(*source);
  }
}

void GetMiscRsp::MergeFrom(const GetMiscRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raltservice.GetMiscRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ralt_filter_type_default() != 0) {
    set_ralt_filter_type_default(from.ralt_filter_type_default());
  }
}

void GetMiscRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raltservice.GetMiscRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMiscRsp::CopyFrom(const GetMiscRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raltservice.GetMiscRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMiscRsp::IsInitialized() const {
  return true;
}

void GetMiscRsp::Swap(GetMiscRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetMiscRsp::InternalSwap(GetMiscRsp* other) {
  using std::swap;
  swap(ralt_filter_type_default_, other->ralt_filter_type_default_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetMiscRsp::GetMetadata() const {
  protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Misc::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Misc::kKeyFieldNumber;
const int Misc::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Misc::Misc()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ralt_2dservice_2eproto::scc_info_Misc.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:raltservice.Misc)
}
Misc::Misc(const Misc& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&key_, &from.key_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&key_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:raltservice.Misc)
}

void Misc::SharedCtor() {
  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&key_)) + sizeof(value_));
}

Misc::~Misc() {
  // @@protoc_insertion_point(destructor:raltservice.Misc)
  SharedDtor();
}

void Misc::SharedDtor() {
}

void Misc::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Misc::descriptor() {
  ::protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Misc& Misc::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ralt_2dservice_2eproto::scc_info_Misc.base);
  return *internal_default_instance();
}


void Misc::Clear() {
// @@protoc_insertion_point(message_clear_start:raltservice.Misc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&key_)) + sizeof(value_));
  _internal_metadata_.Clear();
}

bool Misc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raltservice.Misc)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .raltservice.MiscKey key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_key(static_cast< ::raltservice::MiscKey >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .raltservice.MiscSwitch value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_value(static_cast< ::raltservice::MiscSwitch >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:raltservice.Misc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raltservice.Misc)
  return false;
#undef DO_
}

void Misc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raltservice.Misc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .raltservice.MiscKey key = 1;
  if (this->key() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->key(), output);
  }

  // .raltservice.MiscSwitch value = 2;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:raltservice.Misc)
}

::google::protobuf::uint8* Misc::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:raltservice.Misc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .raltservice.MiscKey key = 1;
  if (this->key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->key(), target);
  }

  // .raltservice.MiscSwitch value = 2;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raltservice.Misc)
  return target;
}

size_t Misc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raltservice.Misc)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .raltservice.MiscKey key = 1;
  if (this->key() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->key());
  }

  // .raltservice.MiscSwitch value = 2;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Misc::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raltservice.Misc)
  GOOGLE_DCHECK_NE(&from, this);
  const Misc* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Misc>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raltservice.Misc)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raltservice.Misc)
    MergeFrom(*source);
  }
}

void Misc::MergeFrom(const Misc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raltservice.Misc)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key() != 0) {
    set_key(from.key());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Misc::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raltservice.Misc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Misc::CopyFrom(const Misc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raltservice.Misc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Misc::IsInitialized() const {
  return true;
}

void Misc::Swap(Misc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Misc::InternalSwap(Misc* other) {
  using std::swap;
  swap(key_, other->key_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Misc::GetMetadata() const {
  protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ModMiscOpReq::InitAsDefaultInstance() {
  ::raltservice::_ModMiscOpReq_default_instance_._instance.get_mutable()->misc_ = const_cast< ::raltservice::Misc*>(
      ::raltservice::Misc::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModMiscOpReq::kIpAddrFieldNumber;
const int ModMiscOpReq::kMiscFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModMiscOpReq::ModMiscOpReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ralt_2dservice_2eproto::scc_info_ModMiscOpReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:raltservice.ModMiscOpReq)
}
ModMiscOpReq::ModMiscOpReq(const ModMiscOpReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip_addr().size() > 0) {
    ip_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_addr_);
  }
  if (from.has_misc()) {
    misc_ = new ::raltservice::Misc(*from.misc_);
  } else {
    misc_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:raltservice.ModMiscOpReq)
}

void ModMiscOpReq::SharedCtor() {
  ip_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  misc_ = NULL;
}

ModMiscOpReq::~ModMiscOpReq() {
  // @@protoc_insertion_point(destructor:raltservice.ModMiscOpReq)
  SharedDtor();
}

void ModMiscOpReq::SharedDtor() {
  ip_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete misc_;
}

void ModMiscOpReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ModMiscOpReq::descriptor() {
  ::protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModMiscOpReq& ModMiscOpReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ralt_2dservice_2eproto::scc_info_ModMiscOpReq.base);
  return *internal_default_instance();
}


void ModMiscOpReq::Clear() {
// @@protoc_insertion_point(message_clear_start:raltservice.ModMiscOpReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && misc_ != NULL) {
    delete misc_;
  }
  misc_ = NULL;
  _internal_metadata_.Clear();
}

bool ModMiscOpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raltservice.ModMiscOpReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ip_addr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "raltservice.ModMiscOpReq.ip_addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .raltservice.Misc misc = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_misc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:raltservice.ModMiscOpReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raltservice.ModMiscOpReq)
  return false;
#undef DO_
}

void ModMiscOpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raltservice.ModMiscOpReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.ModMiscOpReq.ip_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ip_addr(), output);
  }

  // .raltservice.Misc misc = 2;
  if (this->has_misc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_misc(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:raltservice.ModMiscOpReq)
}

::google::protobuf::uint8* ModMiscOpReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:raltservice.ModMiscOpReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.ModMiscOpReq.ip_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ip_addr(), target);
  }

  // .raltservice.Misc misc = 2;
  if (this->has_misc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_misc(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raltservice.ModMiscOpReq)
  return target;
}

size_t ModMiscOpReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raltservice.ModMiscOpReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip_addr());
  }

  // .raltservice.Misc misc = 2;
  if (this->has_misc()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *misc_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModMiscOpReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raltservice.ModMiscOpReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ModMiscOpReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModMiscOpReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raltservice.ModMiscOpReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raltservice.ModMiscOpReq)
    MergeFrom(*source);
  }
}

void ModMiscOpReq::MergeFrom(const ModMiscOpReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raltservice.ModMiscOpReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip_addr().size() > 0) {

    ip_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_addr_);
  }
  if (from.has_misc()) {
    mutable_misc()->::raltservice::Misc::MergeFrom(from.misc());
  }
}

void ModMiscOpReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raltservice.ModMiscOpReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModMiscOpReq::CopyFrom(const ModMiscOpReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raltservice.ModMiscOpReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModMiscOpReq::IsInitialized() const {
  return true;
}

void ModMiscOpReq::Swap(ModMiscOpReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModMiscOpReq::InternalSwap(ModMiscOpReq* other) {
  using std::swap;
  ip_addr_.Swap(&other->ip_addr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(misc_, other->misc_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ModMiscOpReq::GetMetadata() const {
  protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ModMiscOpRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModMiscOpRsp::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModMiscOpRsp::ModMiscOpRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ralt_2dservice_2eproto::scc_info_ModMiscOpRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:raltservice.ModMiscOpRsp)
}
ModMiscOpRsp::ModMiscOpRsp(const ModMiscOpRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:raltservice.ModMiscOpRsp)
}

void ModMiscOpRsp::SharedCtor() {
  result_ = 0u;
}

ModMiscOpRsp::~ModMiscOpRsp() {
  // @@protoc_insertion_point(destructor:raltservice.ModMiscOpRsp)
  SharedDtor();
}

void ModMiscOpRsp::SharedDtor() {
}

void ModMiscOpRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ModMiscOpRsp::descriptor() {
  ::protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModMiscOpRsp& ModMiscOpRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ralt_2dservice_2eproto::scc_info_ModMiscOpRsp.base);
  return *internal_default_instance();
}


void ModMiscOpRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:raltservice.ModMiscOpRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0u;
  _internal_metadata_.Clear();
}

bool ModMiscOpRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raltservice.ModMiscOpRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:raltservice.ModMiscOpRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raltservice.ModMiscOpRsp)
  return false;
#undef DO_
}

void ModMiscOpRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raltservice.ModMiscOpRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:raltservice.ModMiscOpRsp)
}

::google::protobuf::uint8* ModMiscOpRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:raltservice.ModMiscOpRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raltservice.ModMiscOpRsp)
  return target;
}

size_t ModMiscOpRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raltservice.ModMiscOpRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModMiscOpRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raltservice.ModMiscOpRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ModMiscOpRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModMiscOpRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raltservice.ModMiscOpRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raltservice.ModMiscOpRsp)
    MergeFrom(*source);
  }
}

void ModMiscOpRsp::MergeFrom(const ModMiscOpRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raltservice.ModMiscOpRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    set_result(from.result());
  }
}

void ModMiscOpRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raltservice.ModMiscOpRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModMiscOpRsp::CopyFrom(const ModMiscOpRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raltservice.ModMiscOpRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModMiscOpRsp::IsInitialized() const {
  return true;
}

void ModMiscOpRsp::Swap(ModMiscOpRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModMiscOpRsp::InternalSwap(ModMiscOpRsp* other) {
  using std::swap;
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ModMiscOpRsp::GetMetadata() const {
  protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RaltStatusReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RaltStatusReq::kIpAddrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RaltStatusReq::RaltStatusReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ralt_2dservice_2eproto::scc_info_RaltStatusReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:raltservice.RaltStatusReq)
}
RaltStatusReq::RaltStatusReq(const RaltStatusReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip_addr().size() > 0) {
    ip_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_addr_);
  }
  // @@protoc_insertion_point(copy_constructor:raltservice.RaltStatusReq)
}

void RaltStatusReq::SharedCtor() {
  ip_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RaltStatusReq::~RaltStatusReq() {
  // @@protoc_insertion_point(destructor:raltservice.RaltStatusReq)
  SharedDtor();
}

void RaltStatusReq::SharedDtor() {
  ip_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RaltStatusReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RaltStatusReq::descriptor() {
  ::protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RaltStatusReq& RaltStatusReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ralt_2dservice_2eproto::scc_info_RaltStatusReq.base);
  return *internal_default_instance();
}


void RaltStatusReq::Clear() {
// @@protoc_insertion_point(message_clear_start:raltservice.RaltStatusReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool RaltStatusReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raltservice.RaltStatusReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ip_addr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "raltservice.RaltStatusReq.ip_addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:raltservice.RaltStatusReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raltservice.RaltStatusReq)
  return false;
#undef DO_
}

void RaltStatusReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raltservice.RaltStatusReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.RaltStatusReq.ip_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ip_addr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:raltservice.RaltStatusReq)
}

::google::protobuf::uint8* RaltStatusReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:raltservice.RaltStatusReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.RaltStatusReq.ip_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ip_addr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raltservice.RaltStatusReq)
  return target;
}

size_t RaltStatusReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raltservice.RaltStatusReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip_addr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RaltStatusReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raltservice.RaltStatusReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RaltStatusReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RaltStatusReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raltservice.RaltStatusReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raltservice.RaltStatusReq)
    MergeFrom(*source);
  }
}

void RaltStatusReq::MergeFrom(const RaltStatusReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raltservice.RaltStatusReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip_addr().size() > 0) {

    ip_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_addr_);
  }
}

void RaltStatusReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raltservice.RaltStatusReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RaltStatusReq::CopyFrom(const RaltStatusReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raltservice.RaltStatusReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RaltStatusReq::IsInitialized() const {
  return true;
}

void RaltStatusReq::Swap(RaltStatusReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RaltStatusReq::InternalSwap(RaltStatusReq* other) {
  using std::swap;
  ip_addr_.Swap(&other->ip_addr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RaltStatusReq::GetMetadata() const {
  protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RaltStatus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RaltStatus::kIpAddrFieldNumber;
const int RaltStatus::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RaltStatus::RaltStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ralt_2dservice_2eproto::scc_info_RaltStatus.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:raltservice.RaltStatus)
}
RaltStatus::RaltStatus(const RaltStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip_addr().size() > 0) {
    ip_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_addr_);
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:raltservice.RaltStatus)
}

void RaltStatus::SharedCtor() {
  ip_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0u;
}

RaltStatus::~RaltStatus() {
  // @@protoc_insertion_point(destructor:raltservice.RaltStatus)
  SharedDtor();
}

void RaltStatus::SharedDtor() {
  ip_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RaltStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RaltStatus::descriptor() {
  ::protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RaltStatus& RaltStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ralt_2dservice_2eproto::scc_info_RaltStatus.base);
  return *internal_default_instance();
}


void RaltStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:raltservice.RaltStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0u;
  _internal_metadata_.Clear();
}

bool RaltStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raltservice.RaltStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ip_addr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "raltservice.RaltStatus.ip_addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:raltservice.RaltStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raltservice.RaltStatus)
  return false;
#undef DO_
}

void RaltStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raltservice.RaltStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.RaltStatus.ip_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ip_addr(), output);
  }

  // uint32 status = 2;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:raltservice.RaltStatus)
}

::google::protobuf::uint8* RaltStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:raltservice.RaltStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.RaltStatus.ip_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ip_addr(), target);
  }

  // uint32 status = 2;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raltservice.RaltStatus)
  return target;
}

size_t RaltStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raltservice.RaltStatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip_addr());
  }

  // uint32 status = 2;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RaltStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raltservice.RaltStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const RaltStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RaltStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raltservice.RaltStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raltservice.RaltStatus)
    MergeFrom(*source);
  }
}

void RaltStatus::MergeFrom(const RaltStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raltservice.RaltStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip_addr().size() > 0) {

    ip_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_addr_);
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void RaltStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raltservice.RaltStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RaltStatus::CopyFrom(const RaltStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raltservice.RaltStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RaltStatus::IsInitialized() const {
  return true;
}

void RaltStatus::Swap(RaltStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RaltStatus::InternalSwap(RaltStatus* other) {
  using std::swap;
  ip_addr_.Swap(&other->ip_addr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RaltStatus::GetMetadata() const {
  protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExecCmdReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecCmdReq::kIpAddrFieldNumber;
const int ExecCmdReq::kCmdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecCmdReq::ExecCmdReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ralt_2dservice_2eproto::scc_info_ExecCmdReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:raltservice.ExecCmdReq)
}
ExecCmdReq::ExecCmdReq(const ExecCmdReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip_addr().size() > 0) {
    ip_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_addr_);
  }
  cmd_ = from.cmd_;
  // @@protoc_insertion_point(copy_constructor:raltservice.ExecCmdReq)
}

void ExecCmdReq::SharedCtor() {
  ip_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cmd_ = 0;
}

ExecCmdReq::~ExecCmdReq() {
  // @@protoc_insertion_point(destructor:raltservice.ExecCmdReq)
  SharedDtor();
}

void ExecCmdReq::SharedDtor() {
  ip_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ExecCmdReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExecCmdReq::descriptor() {
  ::protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExecCmdReq& ExecCmdReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ralt_2dservice_2eproto::scc_info_ExecCmdReq.base);
  return *internal_default_instance();
}


void ExecCmdReq::Clear() {
// @@protoc_insertion_point(message_clear_start:raltservice.ExecCmdReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cmd_ = 0;
  _internal_metadata_.Clear();
}

bool ExecCmdReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raltservice.ExecCmdReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ip_addr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "raltservice.ExecCmdReq.ip_addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .raltservice.CommandType cmd = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_cmd(static_cast< ::raltservice::CommandType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:raltservice.ExecCmdReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raltservice.ExecCmdReq)
  return false;
#undef DO_
}

void ExecCmdReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raltservice.ExecCmdReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.ExecCmdReq.ip_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ip_addr(), output);
  }

  // .raltservice.CommandType cmd = 2;
  if (this->cmd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->cmd(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:raltservice.ExecCmdReq)
}

::google::protobuf::uint8* ExecCmdReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:raltservice.ExecCmdReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "raltservice.ExecCmdReq.ip_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ip_addr(), target);
  }

  // .raltservice.CommandType cmd = 2;
  if (this->cmd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->cmd(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raltservice.ExecCmdReq)
  return target;
}

size_t ExecCmdReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raltservice.ExecCmdReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip_addr());
  }

  // .raltservice.CommandType cmd = 2;
  if (this->cmd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExecCmdReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raltservice.ExecCmdReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecCmdReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecCmdReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raltservice.ExecCmdReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raltservice.ExecCmdReq)
    MergeFrom(*source);
  }
}

void ExecCmdReq::MergeFrom(const ExecCmdReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raltservice.ExecCmdReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip_addr().size() > 0) {

    ip_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_addr_);
  }
  if (from.cmd() != 0) {
    set_cmd(from.cmd());
  }
}

void ExecCmdReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raltservice.ExecCmdReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecCmdReq::CopyFrom(const ExecCmdReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raltservice.ExecCmdReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecCmdReq::IsInitialized() const {
  return true;
}

void ExecCmdReq::Swap(ExecCmdReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecCmdReq::InternalSwap(ExecCmdReq* other) {
  using std::swap;
  ip_addr_.Swap(&other->ip_addr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(cmd_, other->cmd_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExecCmdReq::GetMetadata() const {
  protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExecCmdRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecCmdRsp::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecCmdRsp::ExecCmdRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ralt_2dservice_2eproto::scc_info_ExecCmdRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:raltservice.ExecCmdRsp)
}
ExecCmdRsp::ExecCmdRsp(const ExecCmdRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:raltservice.ExecCmdRsp)
}

void ExecCmdRsp::SharedCtor() {
  result_ = 0u;
}

ExecCmdRsp::~ExecCmdRsp() {
  // @@protoc_insertion_point(destructor:raltservice.ExecCmdRsp)
  SharedDtor();
}

void ExecCmdRsp::SharedDtor() {
}

void ExecCmdRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExecCmdRsp::descriptor() {
  ::protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExecCmdRsp& ExecCmdRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ralt_2dservice_2eproto::scc_info_ExecCmdRsp.base);
  return *internal_default_instance();
}


void ExecCmdRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:raltservice.ExecCmdRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0u;
  _internal_metadata_.Clear();
}

bool ExecCmdRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raltservice.ExecCmdRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:raltservice.ExecCmdRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raltservice.ExecCmdRsp)
  return false;
#undef DO_
}

void ExecCmdRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raltservice.ExecCmdRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:raltservice.ExecCmdRsp)
}

::google::protobuf::uint8* ExecCmdRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:raltservice.ExecCmdRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raltservice.ExecCmdRsp)
  return target;
}

size_t ExecCmdRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raltservice.ExecCmdRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExecCmdRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raltservice.ExecCmdRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecCmdRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecCmdRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raltservice.ExecCmdRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raltservice.ExecCmdRsp)
    MergeFrom(*source);
  }
}

void ExecCmdRsp::MergeFrom(const ExecCmdRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raltservice.ExecCmdRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    set_result(from.result());
  }
}

void ExecCmdRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raltservice.ExecCmdRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecCmdRsp::CopyFrom(const ExecCmdRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raltservice.ExecCmdRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecCmdRsp::IsInitialized() const {
  return true;
}

void ExecCmdRsp::Swap(ExecCmdRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecCmdRsp::InternalSwap(ExecCmdRsp* other) {
  using std::swap;
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExecCmdRsp::GetMetadata() const {
  protobuf_ralt_2dservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ralt_2dservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace raltservice
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::raltservice::GetRaltStatsReq* Arena::CreateMaybeMessage< ::raltservice::GetRaltStatsReq >(Arena* arena) {
  return Arena::CreateInternal< ::raltservice::GetRaltStatsReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::raltservice::GetRaltStatsRsp* Arena::CreateMaybeMessage< ::raltservice::GetRaltStatsRsp >(Arena* arena) {
  return Arena::CreateInternal< ::raltservice::GetRaltStatsRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::raltservice::GetStatsFieldReq* Arena::CreateMaybeMessage< ::raltservice::GetStatsFieldReq >(Arena* arena) {
  return Arena::CreateInternal< ::raltservice::GetStatsFieldReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::raltservice::GetStatsFieldRsp* Arena::CreateMaybeMessage< ::raltservice::GetStatsFieldRsp >(Arena* arena) {
  return Arena::CreateInternal< ::raltservice::GetStatsFieldRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::raltservice::HomePageReq* Arena::CreateMaybeMessage< ::raltservice::HomePageReq >(Arena* arena) {
  return Arena::CreateInternal< ::raltservice::HomePageReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::raltservice::HomePageRsp* Arena::CreateMaybeMessage< ::raltservice::HomePageRsp >(Arena* arena) {
  return Arena::CreateInternal< ::raltservice::HomePageRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::raltservice::CacheLookUpReq* Arena::CreateMaybeMessage< ::raltservice::CacheLookUpReq >(Arena* arena) {
  return Arena::CreateInternal< ::raltservice::CacheLookUpReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::raltservice::CacheResult* Arena::CreateMaybeMessage< ::raltservice::CacheResult >(Arena* arena) {
  return Arena::CreateInternal< ::raltservice::CacheResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::raltservice::FlowStatLookUpReq* Arena::CreateMaybeMessage< ::raltservice::FlowStatLookUpReq >(Arena* arena) {
  return Arena::CreateInternal< ::raltservice::FlowStatLookUpReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::raltservice::FlowResult* Arena::CreateMaybeMessage< ::raltservice::FlowResult >(Arena* arena) {
  return Arena::CreateInternal< ::raltservice::FlowResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::raltservice::LogInfoLookUpReq* Arena::CreateMaybeMessage< ::raltservice::LogInfoLookUpReq >(Arena* arena) {
  return Arena::CreateInternal< ::raltservice::LogInfoLookUpReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::raltservice::LogResult* Arena::CreateMaybeMessage< ::raltservice::LogResult >(Arena* arena) {
  return Arena::CreateInternal< ::raltservice::LogResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::raltservice::GetRaltLogsReq* Arena::CreateMaybeMessage< ::raltservice::GetRaltLogsReq >(Arena* arena) {
  return Arena::CreateInternal< ::raltservice::GetRaltLogsReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::raltservice::RaltLogs* Arena::CreateMaybeMessage< ::raltservice::RaltLogs >(Arena* arena) {
  return Arena::CreateInternal< ::raltservice::RaltLogs >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::raltservice::GetBasicConfigReq* Arena::CreateMaybeMessage< ::raltservice::GetBasicConfigReq >(Arena* arena) {
  return Arena::CreateInternal< ::raltservice::GetBasicConfigReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::raltservice::BasicConfig* Arena::CreateMaybeMessage< ::raltservice::BasicConfig >(Arena* arena) {
  return Arena::CreateInternal< ::raltservice::BasicConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::raltservice::GetBasicConfigRsp* Arena::CreateMaybeMessage< ::raltservice::GetBasicConfigRsp >(Arena* arena) {
  return Arena::CreateInternal< ::raltservice::GetBasicConfigRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::raltservice::SetBasicConfigReq* Arena::CreateMaybeMessage< ::raltservice::SetBasicConfigReq >(Arena* arena) {
  return Arena::CreateInternal< ::raltservice::SetBasicConfigReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::raltservice::SetBasicConfigRsp* Arena::CreateMaybeMessage< ::raltservice::SetBasicConfigRsp >(Arena* arena) {
  return Arena::CreateInternal< ::raltservice::SetBasicConfigRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::raltservice::Domain* Arena::CreateMaybeMessage< ::raltservice::Domain >(Arena* arena) {
  return Arena::CreateInternal< ::raltservice::Domain >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::raltservice::GetAllDomainReq* Arena::CreateMaybeMessage< ::raltservice::GetAllDomainReq >(Arena* arena) {
  return Arena::CreateInternal< ::raltservice::GetAllDomainReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::raltservice::GetAllDomainRsp* Arena::CreateMaybeMessage< ::raltservice::GetAllDomainRsp >(Arena* arena) {
  return Arena::CreateInternal< ::raltservice::GetAllDomainRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::raltservice::UpdateDomainReq* Arena::CreateMaybeMessage< ::raltservice::UpdateDomainReq >(Arena* arena) {
  return Arena::CreateInternal< ::raltservice::UpdateDomainReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::raltservice::UpdateDomainRsp* Arena::CreateMaybeMessage< ::raltservice::UpdateDomainRsp >(Arena* arena) {
  return Arena::CreateInternal< ::raltservice::UpdateDomainRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::raltservice::GetDomainReq* Arena::CreateMaybeMessage< ::raltservice::GetDomainReq >(Arena* arena) {
  return Arena::CreateInternal< ::raltservice::GetDomainReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::raltservice::GetDomainRsp* Arena::CreateMaybeMessage< ::raltservice::GetDomainRsp >(Arena* arena) {
  return Arena::CreateInternal< ::raltservice::GetDomainRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::raltservice::AddDomainReq* Arena::CreateMaybeMessage< ::raltservice::AddDomainReq >(Arena* arena) {
  return Arena::CreateInternal< ::raltservice::AddDomainReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::raltservice::AddDomainRsp* Arena::CreateMaybeMessage< ::raltservice::AddDomainRsp >(Arena* arena) {
  return Arena::CreateInternal< ::raltservice::AddDomainRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::raltservice::DeleteDomainReq* Arena::CreateMaybeMessage< ::raltservice::DeleteDomainReq >(Arena* arena) {
  return Arena::CreateInternal< ::raltservice::DeleteDomainReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::raltservice::DeleteDomainRsp* Arena::CreateMaybeMessage< ::raltservice::DeleteDomainRsp >(Arena* arena) {
  return Arena::CreateInternal< ::raltservice::DeleteDomainRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::raltservice::GetMiscReq* Arena::CreateMaybeMessage< ::raltservice::GetMiscReq >(Arena* arena) {
  return Arena::CreateInternal< ::raltservice::GetMiscReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::raltservice::GetMiscRsp* Arena::CreateMaybeMessage< ::raltservice::GetMiscRsp >(Arena* arena) {
  return Arena::CreateInternal< ::raltservice::GetMiscRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::raltservice::Misc* Arena::CreateMaybeMessage< ::raltservice::Misc >(Arena* arena) {
  return Arena::CreateInternal< ::raltservice::Misc >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::raltservice::ModMiscOpReq* Arena::CreateMaybeMessage< ::raltservice::ModMiscOpReq >(Arena* arena) {
  return Arena::CreateInternal< ::raltservice::ModMiscOpReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::raltservice::ModMiscOpRsp* Arena::CreateMaybeMessage< ::raltservice::ModMiscOpRsp >(Arena* arena) {
  return Arena::CreateInternal< ::raltservice::ModMiscOpRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::raltservice::RaltStatusReq* Arena::CreateMaybeMessage< ::raltservice::RaltStatusReq >(Arena* arena) {
  return Arena::CreateInternal< ::raltservice::RaltStatusReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::raltservice::RaltStatus* Arena::CreateMaybeMessage< ::raltservice::RaltStatus >(Arena* arena) {
  return Arena::CreateInternal< ::raltservice::RaltStatus >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::raltservice::ExecCmdReq* Arena::CreateMaybeMessage< ::raltservice::ExecCmdReq >(Arena* arena) {
  return Arena::CreateInternal< ::raltservice::ExecCmdReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::raltservice::ExecCmdRsp* Arena::CreateMaybeMessage< ::raltservice::ExecCmdRsp >(Arena* arena) {
  return Arena::CreateInternal< ::raltservice::ExecCmdRsp >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
